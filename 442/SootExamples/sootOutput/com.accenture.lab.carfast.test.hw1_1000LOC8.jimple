public class com.accenture.lab.carfast.test.hw1_1000LOC8 extends java.lang.Object implements com.accenture.lab.carfast.test.hw1_1000LOCInterface9
{
    int f0;
    int[] f1;
    static long f2;
    static java.lang.String[] f3;

    static void <clinit>()
    {
        java.lang.String[] temp$0;

        temp$0 = newarray (java.lang.String)[7];
        <com.accenture.lab.carfast.test.hw1_1000LOC8: java.lang.String[] f3> = temp$0;
        return;
    }

    public byte hw1_1000LOCInterface9Method0(byte, byte, com.accenture.lab.carfast.test.hw1_1000LOC18, double)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC8 this, classObj, temp$0;
        byte var0, var1;
        com.accenture.lab.carfast.test.hw1_1000LOC18 var2;
        double var3, temp$27, temp$28, temp$30, temp$31, temp$32, temp$33, temp$57;
        int i, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$29, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, temp$40, temp$41, temp$42, temp$43, temp$44, temp$45, temp$46, temp$47, temp$48, temp$49, temp$50, temp$51, temp$52, temp$53, temp$54, temp$55, temp$56, temp$58, temp$59;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC8;
        var0 := @parameter0: byte;
        var1 := @parameter1: byte;
        var2 := @parameter2: com.accenture.lab.carfast.test.hw1_1000LOC18;
        var3 := @parameter3: double;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 7 goto label1;

        goto label15;

     label1:
        nop;
        temp$1 = (int) var1;
        temp$2 = temp$1 / 18;
        temp$3 = (int) var0;
        temp$4 = temp$3 % 30;
        temp$5 = temp$4 % -83;
        if temp$2 <= temp$5 goto label2;

        goto label14;

     label2:
        nop;
        temp$6 = (int) var0;
        temp$7 = (int) var1;
        temp$8 = temp$6 + temp$7;
        temp$9 = (int) var1;
        temp$10 = (int) var0;
        temp$11 = temp$9 - temp$10;
        temp$12 = temp$11 % 72;
        temp$13 = temp$12 % 42;
        temp$14 = (int) var1;
        temp$15 = (int) var0;
        temp$16 = temp$14 - temp$15;
        temp$17 = temp$8 + temp$13;
        if temp$17 != temp$16 goto label3;

        goto label14;

     label3:
        nop;
        temp$18 = (int) var0;
        temp$19 = temp$18 % -16;
        temp$20 = (int) var0;
        temp$21 = temp$20 * -43;
        if temp$19 < temp$21 goto label4;

        goto label14;

     label4:
        nop;
        temp$22 = (int) var0;
        temp$23 = (int) var1;
        temp$24 = temp$22 - temp$23;
        temp$25 = (int) var1;
        temp$26 = temp$25 % -80;
        if temp$24 >= temp$26 goto label5;

        goto label13;

     label5:
        nop;
        temp$27 = var3 - 0.5284495597521401;
        temp$28 = var3 / 0.521062812732176;
        temp$29 = temp$27 cmpl temp$28;
        if temp$29 <= 0 goto label12;

        goto label6;

     label6:
        nop;
        temp$30 = var3 - 0.7202262089234946;
        temp$31 = var3 - 0.5365317135156402;
        temp$32 = var3 % 0.0679072960805589;
        temp$33 = temp$31 * temp$32;
        temp$34 = temp$30 cmpg temp$33;
        if temp$34 == 0 goto label12;

        goto label7;

     label7:
        nop;
        temp$35 = (int) var1;
        temp$36 = temp$35 % -97;
        temp$37 = (int) var0;
        temp$38 = temp$37 - 103;
        temp$39 = temp$36 * temp$38;
        temp$40 = (int) var1;
        temp$41 = temp$40 - -63;
        temp$42 = temp$39 * temp$41;
        temp$43 = (int) var1;
        temp$44 = (int) var0;
        temp$45 = temp$43 - temp$44;
        temp$46 = temp$42 * temp$45;
        temp$47 = (int) var1;
        temp$48 = (int) var0;
        temp$49 = temp$47 - temp$48;
        if temp$46 <= temp$49 goto label8;

        goto label11;

     label8:
        nop;
        temp$50 = (int) var1;
        temp$51 = temp$50 * 113;
        temp$52 = (int) var1;
        temp$53 = temp$52 / 10;
        temp$54 = (int) var0;
        temp$55 = temp$54 / -115;
        temp$56 = temp$53 * temp$55;
        if temp$51 <= temp$56 goto label9;

        goto label10;

     label9:
        nop;
        temp$57 = 0.0713495327036624;
        var3 = temp$57;

     label10:
        nop;

     label11:
        nop;

     label12:
        nop;

     label13:
        nop;

     label14:
        nop;
        nop;
        temp$58 = i;
        temp$59 = temp$58 + 1;
        i = temp$59;
        goto label0;

     label15:
        nop;
        return var0;
    }

    public byte hw1_1000LOCInterface9Method1(char, byte, long)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC8 this, classObj, temp$0;
        char var0;
        byte var1, temp$11;
        long var2;
        int temp$1, temp$2, temp$3, temp$4, temp$6, temp$7, temp$8, temp$9, temp$10;
        java.io.PrintStream temp$5;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC8;
        var0 := @parameter0: char;
        var1 := @parameter1: byte;
        var2 := @parameter2: long;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        temp$1 = (int) var0;
        temp$2 = temp$1 - 119;
        temp$3 = (int) var0;
        temp$4 = temp$3 - 98;
        if temp$2 <= temp$4 goto label0;

        goto label1;

     label0:
        nop;
        temp$5 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$5.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC8 - hw1_1000LOCInterface9Method1- LineInMethod: 5");
        goto label2;

     label1:
        nop;
        temp$6 = (int) var1;
        temp$7 = temp$6 % -102;
        temp$8 = (int) var1;
        temp$9 = temp$8 / -86;
        temp$10 = temp$7 * temp$9;
        temp$11 = (byte) temp$10;
        var1 = temp$11;

     label2:
        nop;
        return var1;
    }

    public long hw1_1000LOCInterface9Method2(long, char, long, short, float, byte, java.lang.String)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC8 this, classObj, temp$0;
        long var0, var2;
        char var1;
        short var3;
        float var4;
        byte var5;
        java.lang.String var6;
        int i, temp$2, temp$3;
        java.io.PrintStream temp$1;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC8;
        var0 := @parameter0: long;
        var1 := @parameter1: char;
        var2 := @parameter2: long;
        var3 := @parameter3: short;
        var4 := @parameter4: float;
        var5 := @parameter5: byte;
        var6 := @parameter6: java.lang.String;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 0 goto label1;

        goto label2;

     label1:
        nop;
        temp$1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$1.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC8 - hw1_1000LOCInterface9Method2- LineInMethod: 3");
        nop;
        temp$2 = i;
        temp$3 = temp$2 + 1;
        i = temp$3;
        goto label0;

     label2:
        nop;
        return var0;
    }

    public static int hw1_1000LOC8method0(char, com.accenture.lab.carfast.test.hw1_1000LOC15, long, char, char)
    {
        char var0, var3, var4;
        com.accenture.lab.carfast.test.hw1_1000LOC15 var1;
        long var2, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$8, temp$9, temp$11, temp$12, temp$13, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$27, temp$28, temp$29, temp$31, temp$32, temp$33, temp$34, temp$36, temp$37, temp$38, temp$39, temp$41, temp$42, temp$43, temp$44, temp$45, temp$46, temp$47;
        com.accenture.lab.carfast.test.hw1_1000LOC8 classObj, temp$0;
        int temp$7, temp$10, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$26, temp$30, temp$35, temp$40, temp$48, temp$50;
        java.io.PrintStream temp$49;

        var0 := @parameter0: char;
        var1 := @parameter1: com.accenture.lab.carfast.test.hw1_1000LOC15;
        var2 := @parameter2: long;
        var3 := @parameter3: char;
        var4 := @parameter4: char;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        temp$1 = var2;
        temp$2 = temp$1 + 51L;
        temp$3 = temp$2 / 82L;
        temp$4 = var2;
        temp$5 = temp$4 + 20L;
        temp$6 = temp$5 % 35L;
        temp$7 = temp$3 cmp temp$6;
        if temp$7 < 0 goto label12;

        goto label0;

     label0:
        nop;
        temp$8 = var2 * 66L;
        temp$9 = var2 * 70L;
        temp$10 = temp$8 cmp temp$9;
        if temp$10 != 0 goto label12;

        goto label1;

     label1:
        nop;
        temp$11 = var2 - 68L;
        temp$12 = temp$11 % 73L;
        temp$13 = var2 - 59L;
        temp$14 = temp$12 cmp temp$13;
        if temp$14 <= 0 goto label11;

        goto label2;

     label2:
        nop;
        temp$15 = (int) var4;
        temp$16 = (int) var0;
        temp$17 = (int) var3;
        temp$18 = temp$17 % 103;
        temp$19 = temp$15 + temp$16;
        if temp$19 == temp$18 goto label3;

        goto label10;

     label3:
        nop;
        temp$20 = var2 * 45L;
        temp$21 = temp$20 % 82L;
        temp$22 = var2 - 45L;
        temp$23 = temp$22;
        temp$24 = var2 - 18L;
        temp$25 = temp$23 + temp$24;
        temp$26 = temp$21 cmp temp$25;
        if temp$26 > 0 goto label9;

        goto label4;

     label4:
        nop;
        temp$27 = var2 - 29L;
        temp$28 = var2;
        temp$29 = temp$28 + 80L;
        temp$30 = temp$27 cmp temp$29;
        if temp$30 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$31 = <com.accenture.lab.carfast.test.hw1_1000LOC8: long f2>;
        temp$32 = temp$31 * 92L;
        temp$33 = <com.accenture.lab.carfast.test.hw1_1000LOC8: long f2>;
        temp$34 = temp$33 - 64L;
        temp$35 = temp$32 cmp temp$34;
        if temp$35 >= 0 goto label6;

        goto label7;

     label6:
        nop;
        temp$36 = var2;
        temp$37 = <com.accenture.lab.carfast.test.hw1_1000LOC8: long f2>;
        temp$38 = temp$37 * 7L;
        temp$39 = temp$36 + 60L;
        temp$40 = temp$39 cmp temp$38;
        if temp$40 != 0 goto label9;

        goto label7;

     label7:
        nop;
        temp$41 = <com.accenture.lab.carfast.test.hw1_1000LOC8: long f2>;
        temp$42 = temp$41 * 5L;
        temp$43 = <com.accenture.lab.carfast.test.hw1_1000LOC8: long f2>;
        temp$44 = temp$43 * 93L;
        temp$45 = <com.accenture.lab.carfast.test.hw1_1000LOC8: long f2>;
        temp$46 = temp$45 + 36L;
        temp$47 = temp$44 * temp$46;
        temp$48 = temp$42 cmp temp$47;
        if temp$48 >= 0 goto label9;

        goto label8;

     label8:
        nop;
        temp$49 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$49.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC8 - hw1_1000LOC8method0- LineInMethod: 9");

     label9:
        nop;

     label10:
        nop;

     label11:
        nop;

     label12:
        nop;
        temp$50 = 62;
        return temp$50;
    }

    public static int hw1_1000LOC8method1(long, float, java.lang.String)
    {
        long var0;
        float var1, temp$16;
        java.lang.String var2, temp$4, temp$7, temp$8, temp$11, temp$13, temp$14;
        com.accenture.lab.carfast.test.hw1_1000LOC8 classObj, temp$0;
        java.lang.StringBuffer temp$1, temp$9, temp$10, temp$12;
        java.lang.String[] temp$2, temp$5;
        int temp$3, temp$6, temp$17;
        java.io.PrintStream temp$15;

        var0 := @parameter0: long;
        var1 := @parameter1: float;
        var2 := @parameter2: java.lang.String;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        temp$2 = <com.accenture.lab.carfast.test.hw1_1000LOC8: java.lang.String[] f3>;
        temp$3 = 5;
        temp$4 = temp$2[temp$3];
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$4);
        temp$5 = <com.accenture.lab.carfast.test.hw1_1000LOC8: java.lang.String[] f3>;
        temp$6 = 3;
        temp$7 = temp$5[temp$6];
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$7);
        temp$8 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$9 = new java.lang.StringBuffer;
        specialinvoke temp$9.<java.lang.StringBuffer: void <init>()>();
        temp$10 = new java.lang.StringBuffer;
        specialinvoke temp$10.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("jtxooibmxsjactuondcalcgzkbzkiywjjpnvswkpncrrnmxkdkpytjgojkufcakcwealjdykdhkdrxpbipeywivnvs");
        temp$11 = virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$11);
        temp$12 = new java.lang.StringBuffer;
        specialinvoke temp$12.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("mwbzbjnfawwxthdkzamicywsdsvasmlcyltiwbiycbkytsewgfnxersrv");
        temp$13 = virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$13);
        temp$14 = virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$8 == temp$14 goto label0;

        goto label1;

     label0:
        nop;
        temp$15 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$15.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC8 - hw1_1000LOC8method1- LineInMethod: 5");
        goto label2;

     label1:
        nop;
        temp$16 = var1 % 0.6640515F;
        var1 = temp$16;

     label2:
        nop;
        temp$17 = 21;
        return temp$17;
    }

    public java.lang.Object hw1_1000LOC8method2(short, int, long)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC8 this, classObj, temp$0;
        short var0;
        int var1, temp$1, temp$2, temp$3, temp$4, temp$6, temp$7, temp$8, temp$9, temp$10;
        long var2;
        int[] temp$5;
        java.io.PrintStream temp$11;
        java.lang.Object temp$12;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC8;
        var0 := @parameter0: short;
        var1 := @parameter1: int;
        var2 := @parameter2: long;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        temp$1 = (int) var0;
        temp$2 = temp$1 * 24679;
        temp$3 = (int) var0;
        temp$4 = temp$3 - 20586;
        if temp$2 <= temp$4 goto label0;

        goto label1;

     label0:
        nop;
        temp$5 = this.<com.accenture.lab.carfast.test.hw1_1000LOC8: int[] f1>;
        temp$6 = 53;
        temp$7 = this.<com.accenture.lab.carfast.test.hw1_1000LOC8: int f0>;
        temp$8 = var1 / 77;
        temp$9 = temp$7 + 91;
        temp$10 = temp$9 * temp$8;
        temp$5[temp$6] = temp$10;
        goto label2;

     label1:
        nop;
        temp$11 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$11.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC8 - hw1_1000LOC8method2- LineInMethod: 6");

     label2:
        nop;
        temp$12 = null;
        return temp$12;
    }

    public static int hw1_1000LOC8method3(short, double, float)
    {
        short var0;
        double var1, temp$1, temp$2;
        float var2;
        com.accenture.lab.carfast.test.hw1_1000LOC8 classObj, temp$0;
        int temp$3, temp$5;
        java.io.PrintStream temp$4;

        var0 := @parameter0: short;
        var1 := @parameter1: double;
        var2 := @parameter2: float;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        temp$1 = var1 / 0.941375277576862;
        temp$2 = var1 % 0.25489033116861115;
        temp$3 = temp$1 cmpl temp$2;
        if temp$3 < 0 goto label1;

        goto label0;

     label0:
        nop;
        goto label2;

     label1:
        nop;
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC8 - hw1_1000LOC8method3- LineInMethod: 5");

     label2:
        nop;
        temp$5 = 81;
        return temp$5;
    }

    public double hw1_1000LOC8method4(double, short, com.accenture.lab.carfast.test.hw1_1000LOC22)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC8 this, classObj, temp$0;
        double var0, temp$1, temp$2, temp$4, temp$5, temp$6, temp$8, temp$9, temp$10, temp$11, temp$12, temp$14, temp$15, temp$16;
        short var1;
        com.accenture.lab.carfast.test.hw1_1000LOC22 var2;
        int i, temp$3, temp$7, temp$13, temp$17, temp$18, temp$19, temp$20;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC8;
        var0 := @parameter0: double;
        var1 := @parameter1: short;
        var2 := @parameter2: com.accenture.lab.carfast.test.hw1_1000LOC22;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 8 goto label1;

        goto label10;

     label1:
        nop;
        temp$1 = var0 % 0.7107117626108678;
        temp$2 = var0 / 0.9912352325225362;
        temp$3 = temp$1 cmpg temp$2;
        if temp$3 >= 0 goto label9;

        goto label2;

     label2:
        nop;
        temp$4 = var0 % 0.26820420574584436;
        temp$5 = temp$4 % 0.7292004290528367;
        temp$6 = var0 * 0.10793925067555143;
        temp$7 = temp$5 cmpl temp$6;
        if temp$7 < 0 goto label8;

        goto label3;

     label3:
        nop;
        temp$8 = var0 * 0.9084722570326256;
        temp$9 = var0 * 0.932267425819121;
        temp$10 = temp$9;
        temp$11 = var0 * 0.8108441182336328;
        temp$12 = temp$10 + temp$11;
        temp$13 = temp$8 cmpl temp$12;
        if temp$13 < 0 goto label7;

        goto label4;

     label4:
        nop;
        temp$14 = var0 * 0.4512796370921991;
        temp$15 = var0;
        temp$16 = temp$15 + 0.0853813727070738;
        temp$17 = temp$14 cmpl temp$16;
        if temp$17 <= 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$18 = 3588;
        this.<com.accenture.lab.carfast.test.hw1_1000LOC8: int f0> = temp$18;

     label6:
        nop;

     label7:
        nop;

     label8:
        nop;

     label9:
        nop;
        nop;
        temp$19 = i;
        temp$20 = temp$19 + 1;
        i = temp$20;
        goto label0;

     label10:
        nop;
        return var0;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        com.accenture.lab.carfast.test.hw1_1000LOC8 obj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC18 temp$1;
        byte temp$2, temp$3;
        long temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC15 temp$5;
        int temp$6, temp$7, temp$9;
        java.lang.Object temp$8;
        com.accenture.lab.carfast.test.hw1_1000LOC22 temp$10;
        double temp$11;

        args := @parameter0: java.lang.String[];
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        obj = temp$0;
        temp$1 = new com.accenture.lab.carfast.test.hw1_1000LOC18;
        specialinvoke temp$1.<com.accenture.lab.carfast.test.hw1_1000LOC18: void <init>()>();
        temp$2 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: byte hw1_1000LOCInterface9Method0(byte,byte,com.accenture.lab.carfast.test.hw1_1000LOC18,double)>(-20, 107, temp$1, 0.7247155479365355);
        temp$3 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: byte hw1_1000LOCInterface9Method1(char,byte,long)>(116, -40, 34L);
        temp$4 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: long hw1_1000LOCInterface9Method2(long,char,long,short,float,byte,java.lang.String)>(90L, 110, 16L, 15642, 0.8137011F, 0, "wazmsromjfuvguvvemfgtfjbexquuqgwjtnzlbjseylidqggfgycfejybnwxenqjvwfangg");
        temp$5 = new com.accenture.lab.carfast.test.hw1_1000LOC15;
        specialinvoke temp$5.<com.accenture.lab.carfast.test.hw1_1000LOC15: void <init>()>();
        temp$6 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC8: int hw1_1000LOC8method0(char,com.accenture.lab.carfast.test.hw1_1000LOC15,long,char,char)>(100, temp$5, 66L, 109, 97);
        temp$7 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC8: int hw1_1000LOC8method1(long,float,java.lang.String)>(46L, 0.45598775F, "nxjfzfimcybmrlknmwmfcbvtfkwgskkvedttauviimxszyxgfbjzecpgskplwsgjhjxgghpegw");
        temp$8 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: java.lang.Object hw1_1000LOC8method2(short,int,long)>(24767, 76, 91L);
        temp$9 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC8: int hw1_1000LOC8method3(short,double,float)>(16601, 0.8494927296155924, 0.055583775F);
        temp$10 = new com.accenture.lab.carfast.test.hw1_1000LOC22;
        specialinvoke temp$10.<com.accenture.lab.carfast.test.hw1_1000LOC22: void <init>()>();
        temp$11 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: double hw1_1000LOC8method4(double,short,com.accenture.lab.carfast.test.hw1_1000LOC22)>(0.1307934315183934, 22948, temp$10);
        return;
    }

    public static void singleEntry(int, int, int, int, int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, temp$6, temp$7, temp$9;
        com.accenture.lab.carfast.test.hw1_1000LOC8 obj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC18 temp$1;
        byte temp$2, temp$3;
        long temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC15 temp$5;
        java.lang.Object temp$8;
        com.accenture.lab.carfast.test.hw1_1000LOC22 temp$10;
        double temp$11;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        i6 := @parameter6: int;
        i7 := @parameter7: int;
        i8 := @parameter8: int;
        i9 := @parameter9: int;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        obj = temp$0;
        temp$1 = new com.accenture.lab.carfast.test.hw1_1000LOC18;
        specialinvoke temp$1.<com.accenture.lab.carfast.test.hw1_1000LOC18: void <init>()>();
        temp$2 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: byte hw1_1000LOCInterface9Method0(byte,byte,com.accenture.lab.carfast.test.hw1_1000LOC18,double)>(-60, 4, temp$1, 0.4366261526122479);
        temp$3 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: byte hw1_1000LOCInterface9Method1(char,byte,long)>(112, -35, 40L);
        temp$4 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: long hw1_1000LOCInterface9Method2(long,char,long,short,float,byte,java.lang.String)>(97L, 114, 16L, 13394, 0.51945144F, 42, "twxejsmujxylnebg");
        temp$5 = new com.accenture.lab.carfast.test.hw1_1000LOC15;
        specialinvoke temp$5.<com.accenture.lab.carfast.test.hw1_1000LOC15: void <init>()>();
        temp$6 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC8: int hw1_1000LOC8method0(char,com.accenture.lab.carfast.test.hw1_1000LOC15,long,char,char)>(120, temp$5, 39L, 98, 120);
        temp$7 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC8: int hw1_1000LOC8method1(long,float,java.lang.String)>(25L, 0.09098166F, "ikiodlwcttglpnyhffpnpbeljlnxexyrwkgpcdpgteixzkkyumtipwflz");
        temp$8 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: java.lang.Object hw1_1000LOC8method2(short,int,long)>(25571, i9, 30L);
        temp$9 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC8: int hw1_1000LOC8method3(short,double,float)>(4709, 0.5931397630731526, 0.095327854F);
        temp$10 = new com.accenture.lab.carfast.test.hw1_1000LOC22;
        specialinvoke temp$10.<com.accenture.lab.carfast.test.hw1_1000LOC22: void <init>()>();
        temp$11 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC8: double hw1_1000LOC8method4(double,short,com.accenture.lab.carfast.test.hw1_1000LOC22)>(0.5949792925362637, 20624, temp$10);
        return;
    }

    public void <init>()
    {
        com.accenture.lab.carfast.test.hw1_1000LOC8 this;
        int[] temp$0;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = newarray (int)[86];
        this.<com.accenture.lab.carfast.test.hw1_1000LOC8: int[] f1> = temp$0;
        return;
    }
}
