public class com.accenture.lab.carfast.test.hw1_1000LOC1 extends java.lang.Object
{
    byte[] f0;
    float f1;

    public static char hw1_1000LOC1method0(java.lang.String, java.lang.String, com.accenture.lab.carfast.test.hw1_1000LOC25)
    {
        java.lang.String var0, var1, temp$2, temp$5, temp$6, temp$8, temp$10, temp$12, temp$15, temp$18, temp$19, temp$20;
        com.accenture.lab.carfast.test.hw1_1000LOC25 var2;
        com.accenture.lab.carfast.test.hw1_1000LOC1 classObj, temp$0;
        java.lang.StringBuffer temp$1, temp$3, temp$4, temp$7, temp$9, temp$11, temp$13, temp$14, temp$16, temp$17;
        java.io.PrintStream temp$21;
        char temp$22;

        var0 := @parameter0: java.lang.String;
        var1 := @parameter1: java.lang.String;
        var2 := @parameter2: com.accenture.lab.carfast.test.hw1_1000LOC25;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        classObj = temp$0;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("pjayrbdpnqhyapwsjjnnpm");
        temp$2 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        temp$4 = new java.lang.StringBuffer;
        specialinvoke temp$4.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        temp$5 = virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$5);
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("hevilgetslzectlhmbtziypbhfzfyhyofifytooqjx");
        temp$6 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$2 != temp$6 goto label0;

        goto label3;

     label0:
        nop;
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        temp$8 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$9 = new java.lang.StringBuffer;
        specialinvoke temp$9.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        temp$10 = virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$8 == temp$10 goto label1;

        goto label3;

     label1:
        nop;
        temp$11 = new java.lang.StringBuffer;
        specialinvoke temp$11.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("uygkyjhthvswwarzbsfhzaxcdqclbhfmhxtfezgsidxvommmmcmcxnnuwjpfmzjouoqqisoqhxcqbyvsqkidbuodmtvnlhtferf");
        temp$12 = virtualinvoke temp$11.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$13 = new java.lang.StringBuffer;
        specialinvoke temp$13.<java.lang.StringBuffer: void <init>()>();
        temp$14 = new java.lang.StringBuffer;
        specialinvoke temp$14.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        temp$15 = virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$15);
        temp$16 = new java.lang.StringBuffer;
        specialinvoke temp$16.<java.lang.StringBuffer: void <init>()>();
        temp$17 = new java.lang.StringBuffer;
        specialinvoke temp$17.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        temp$18 = virtualinvoke temp$17.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$18);
        virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("cssgmlhzfofjeguvrdsvhpfjuvfixkqlibfzzekqwndkslalnqrtitvamxrdbgbvminkpihdqwzj");
        temp$19 = virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$19);
        temp$20 = virtualinvoke temp$13.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$12 != temp$20 goto label2;

        goto label3;

     label2:
        nop;
        temp$21 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$21.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC1 - hw1_1000LOC1method0- LineInMethod: 3");

     label3:
        nop;
        temp$22 = 100;
        return temp$22;
    }

    public char hw1_1000LOC1method1(com.accenture.lab.carfast.test.hw1_1000LOC16, java.lang.String, com.accenture.lab.carfast.test.hw1_1000LOC5, double, short, double, short)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC1 this, classObj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC16 var0;
        java.lang.String var1;
        com.accenture.lab.carfast.test.hw1_1000LOC5 var2;
        double var3, var5;
        short var4, var6;
        int temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27;
        java.io.PrintStream temp$28;
        char temp$29;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC1;
        var0 := @parameter0: com.accenture.lab.carfast.test.hw1_1000LOC16;
        var1 := @parameter1: java.lang.String;
        var2 := @parameter2: com.accenture.lab.carfast.test.hw1_1000LOC5;
        var3 := @parameter3: double;
        var4 := @parameter4: short;
        var5 := @parameter5: double;
        var6 := @parameter6: short;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        classObj = temp$0;
        temp$1 = (int) var6;
        temp$2 = (int) var4;
        temp$3 = (int) var6;
        temp$4 = temp$2 * temp$3;
        temp$5 = temp$1 + 6616;
        if temp$5 < temp$4 goto label4;

        goto label0;

     label0:
        nop;
        temp$6 = (int) var6;
        temp$7 = temp$6 % 2630;
        temp$8 = (int) var6;
        temp$9 = (int) var4;
        temp$10 = temp$8 * temp$9;
        temp$11 = temp$7 - temp$10;
        temp$12 = (int) var4;
        temp$13 = temp$12 * 8221;
        if temp$11 != temp$13 goto label2;

        goto label1;

     label1:
        nop;
        temp$14 = (int) var4;
        temp$15 = (int) var4;
        temp$16 = temp$15 * 7000;
        temp$17 = temp$14 + 12625;
        if temp$17 >= temp$16 goto label2;

        goto label5;

     label2:
        nop;
        temp$18 = (int) var6;
        temp$19 = (int) var4;
        temp$20 = temp$18 * temp$19;
        temp$21 = (int) var4;
        temp$22 = temp$21 - 24500;
        if temp$20 <= temp$22 goto label3;

        goto label5;

     label3:
        nop;
        temp$23 = (int) var4;
        temp$24 = (int) var6;
        temp$25 = (int) var6;
        temp$26 = temp$25 / 25217;
        temp$27 = temp$23 + temp$24;
        if temp$27 != temp$26 goto label4;

        goto label5;

     label4:
        nop;
        temp$28 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$28.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC1 - hw1_1000LOC1method1- LineInMethod: 3");

     label5:
        nop;
        temp$29 = 107;
        return temp$29;
    }

    public short hw1_1000LOC1method2(short, long, com.accenture.lab.carfast.test.hw1_1000LOC34, int, byte, int, short)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC1 this, classObj, temp$0;
        short var0, var6;
        long var1;
        com.accenture.lab.carfast.test.hw1_1000LOC34 var2;
        int var3, var5, i, temp$2, temp$3;
        byte var4;
        java.io.PrintStream temp$1;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC1;
        var0 := @parameter0: short;
        var1 := @parameter1: long;
        var2 := @parameter2: com.accenture.lab.carfast.test.hw1_1000LOC34;
        var3 := @parameter3: int;
        var4 := @parameter4: byte;
        var5 := @parameter5: int;
        var6 := @parameter6: short;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 1 goto label1;

        goto label2;

     label1:
        nop;
        temp$1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$1.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC1 - hw1_1000LOC1method2- LineInMethod: 3");
        nop;
        temp$2 = i;
        temp$3 = temp$2 + 1;
        i = temp$3;
        goto label0;

     label2:
        nop;
        return var0;
    }

    public static char hw1_1000LOC1method3(long, java.lang.String, long, com.accenture.lab.carfast.test.hw1_1000LOC0, double, byte, long)
    {
        long var0, var2, var6, temp$29;
        java.lang.String var1, temp$6, temp$8, temp$9, temp$11, temp$12, temp$15, temp$17, temp$18, temp$19, temp$22, temp$24, temp$25, temp$26, temp$28;
        com.accenture.lab.carfast.test.hw1_1000LOC0 var3;
        double var4;
        byte var5;
        com.accenture.lab.carfast.test.hw1_1000LOC1 classObj, temp$0;
        java.lang.StringBuffer temp$1, temp$2, temp$3, temp$4, temp$5, temp$7, temp$10, temp$13, temp$14, temp$16, temp$20, temp$21, temp$23, temp$27;
        java.io.PrintStream temp$30;
        char temp$31;

        var0 := @parameter0: long;
        var1 := @parameter1: java.lang.String;
        var2 := @parameter2: long;
        var3 := @parameter3: com.accenture.lab.carfast.test.hw1_1000LOC0;
        var4 := @parameter4: double;
        var5 := @parameter5: byte;
        var6 := @parameter6: long;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        classObj = temp$0;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        temp$2 = new java.lang.StringBuffer;
        specialinvoke temp$2.<java.lang.StringBuffer: void <init>()>();
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        temp$4 = new java.lang.StringBuffer;
        specialinvoke temp$4.<java.lang.StringBuffer: void <init>()>();
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("cqzgwmyvaktdcqokvluqttpivbslkoujjuzingbmntnvphglnjscqkvpcuqqsnkthityhguwlawugzkdwmvxjnbaqeouhg");
        temp$6 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$6);
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("fnzrilyccdraniesqgzkqytbojaggkxdiksagzasnbwjtgtpvtczadzcitdkccqjogvdigpewmzo");
        temp$8 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$8);
        temp$9 = virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$9);
        temp$10 = new java.lang.StringBuffer;
        specialinvoke temp$10.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("rqlrmrrlgusgcuobgunxcarcriyimtesdvzzliqzranjhusdlxgoddzgrvzfo");
        temp$11 = virtualinvoke temp$10.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$11);
        temp$12 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$12);
        temp$13 = new java.lang.StringBuffer;
        specialinvoke temp$13.<java.lang.StringBuffer: void <init>()>();
        temp$14 = new java.lang.StringBuffer;
        specialinvoke temp$14.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("qdstyowsrmtcygspzfkmaomdfnctowlqlogqgdlvqulbxoipthhuxgkijsaoibbzzybg");
        temp$15 = virtualinvoke temp$14.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$15);
        temp$16 = new java.lang.StringBuffer;
        specialinvoke temp$16.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("dpmxshnvnknjivulmtpooxwwxnqpxtcbqg");
        temp$17 = virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$17);
        temp$18 = virtualinvoke temp$13.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$18);
        temp$19 = virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$19);
        temp$20 = new java.lang.StringBuffer;
        specialinvoke temp$20.<java.lang.StringBuffer: void <init>()>();
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("uisodzyeyecwhjxojrhdnlqbfwzpkhkiyponlxpgfsatgsjckfrsxvvrwpxqzktwfuabdhjsibzsakydegzvoofpenvkifcvlvwi");
        temp$22 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$22);
        temp$23 = new java.lang.StringBuffer;
        specialinvoke temp$23.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("nowyfpcepukoeerdkcftdqtdcybhjsvhqgjjmfujhjfcg");
        temp$24 = virtualinvoke temp$23.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$24);
        temp$25 = virtualinvoke temp$20.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$25);
        temp$26 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$27 = new java.lang.StringBuffer;
        specialinvoke temp$27.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var1);
        virtualinvoke temp$27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("crtevslkfp");
        temp$28 = virtualinvoke temp$27.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$26 != temp$28 goto label0;

        goto label1;

     label0:
        nop;
        temp$29 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC0: long hw1_1000LOC0method4(java.lang.String,com.accenture.lab.carfast.test.hw1_1000LOC1,double)>(var1, null, var4);
        goto label2;

     label1:
        nop;
        temp$30 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$30.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC1 - hw1_1000LOC1method3- LineInMethod: 6");

     label2:
        nop;
        temp$31 = 120;
        return temp$31;
    }

    public static byte hw1_1000LOC1method4(double, float, short, double, short)
    {
        double var0, var3, temp$1, temp$4, temp$5, temp$7, temp$8, temp$10, temp$11;
        float var1, temp$14, temp$15, temp$16, temp$17;
        short var2, var4;
        com.accenture.lab.carfast.test.hw1_1000LOC1 classObj, temp$0;
        int i, temp$2, temp$3, temp$6, temp$9, temp$12;
        java.io.PrintStream temp$13;
        byte temp$18;

        var0 := @parameter0: double;
        var1 := @parameter1: float;
        var2 := @parameter2: short;
        var3 := @parameter3: double;
        var4 := @parameter4: short;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 7 goto label1;

        goto label2;

     label1:
        nop;
        temp$1 = 0.21004554652222351;
        var3 = temp$1;
        nop;
        temp$2 = i;
        temp$3 = temp$2 + 1;
        i = temp$3;
        goto label0;

     label2:
        nop;
        temp$4 = var0 - 0.7481924390624081;
        temp$5 = var0 * 0.06759483131734112;
        temp$6 = temp$4 cmpg temp$5;
        if temp$6 == 0 goto label3;

        goto label4;

     label3:
        nop;
        temp$7 = var0 * var3;
        temp$8 = var0 - 0.775920289371871;
        temp$9 = temp$7 cmpg temp$8;
        if temp$9 == 0 goto label6;

        goto label4;

     label4:
        nop;
        temp$10 = var0 - var3;
        temp$11 = var0 % 0.7448242385511658;
        temp$12 = temp$10 cmpg temp$11;
        if temp$12 == 0 goto label6;

        goto label5;

     label5:
        nop;
        temp$13 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$13.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC1 - hw1_1000LOC1method4- LineInMethod: 7");
        goto label7;

     label6:
        nop;
        temp$14 = var1 / 0.76024336F;
        temp$15 = temp$14;
        temp$16 = var1 - 0.15158081F;
        temp$17 = temp$15 + temp$16;
        var1 = temp$17;

     label7:
        nop;
        temp$18 = -65;
        return temp$18;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        com.accenture.lab.carfast.test.hw1_1000LOC1 obj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC25 temp$1;
        char temp$2, temp$5, temp$9;
        com.accenture.lab.carfast.test.hw1_1000LOC16 temp$3;
        com.accenture.lab.carfast.test.hw1_1000LOC5 temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC34 temp$6;
        short temp$7;
        com.accenture.lab.carfast.test.hw1_1000LOC0 temp$8;
        byte temp$10;

        args := @parameter0: java.lang.String[];
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        obj = temp$0;
        temp$1 = new com.accenture.lab.carfast.test.hw1_1000LOC25;
        specialinvoke temp$1.<com.accenture.lab.carfast.test.hw1_1000LOC25: void <init>()>();
        temp$2 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC1: char hw1_1000LOC1method0(java.lang.String,java.lang.String,com.accenture.lab.carfast.test.hw1_1000LOC25)>("wliagpiciavnyjmsdhanzuzdbdvvevohit", "pkhmimeqlqrdnnwaiykjzpnjmhqqbgpaalyprbshcvgmlc", temp$1);
        temp$3 = new com.accenture.lab.carfast.test.hw1_1000LOC16;
        specialinvoke temp$3.<com.accenture.lab.carfast.test.hw1_1000LOC16: void <init>()>();
        temp$4 = new com.accenture.lab.carfast.test.hw1_1000LOC5;
        specialinvoke temp$4.<com.accenture.lab.carfast.test.hw1_1000LOC5: void <init>()>();
        temp$5 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC1: char hw1_1000LOC1method1(com.accenture.lab.carfast.test.hw1_1000LOC16,java.lang.String,com.accenture.lab.carfast.test.hw1_1000LOC5,double,short,double,short)>(temp$3, "tmopxgokosaxaknyzzqzawfvnvcfqifcalvjjjnkfboebhhvldieuhgnalekxeftjacsvzelcoxyvnldwgcltxmjxxo", temp$4, 0.44645738134928603, 1686, 0.5149056096691775, 13847);
        temp$6 = new com.accenture.lab.carfast.test.hw1_1000LOC34;
        specialinvoke temp$6.<com.accenture.lab.carfast.test.hw1_1000LOC34: void <init>()>();
        temp$7 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC1: short hw1_1000LOC1method2(short,long,com.accenture.lab.carfast.test.hw1_1000LOC34,int,byte,int,short)>(18801, 4L, temp$6, 13, -44, 69, 13209);
        temp$8 = new com.accenture.lab.carfast.test.hw1_1000LOC0;
        specialinvoke temp$8.<com.accenture.lab.carfast.test.hw1_1000LOC0: void <init>()>();
        temp$9 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC1: char hw1_1000LOC1method3(long,java.lang.String,long,com.accenture.lab.carfast.test.hw1_1000LOC0,double,byte,long)>(19L, "yvprmbopkrjembeyxvuqattgtehslgojcqvyvpexdbmofujtzqli", 65L, temp$8, 0.7561424266220425, -10, 47L);
        temp$10 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC1: byte hw1_1000LOC1method4(double,float,short,double,short)>(0.10352792906292674, 0.19958878F, 1560, 0.3553870418390158, 24769);
        return;
    }

    public static void singleEntry(int, int, int, int, int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        com.accenture.lab.carfast.test.hw1_1000LOC1 obj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC25 temp$1;
        char temp$2, temp$5, temp$9;
        com.accenture.lab.carfast.test.hw1_1000LOC16 temp$3;
        com.accenture.lab.carfast.test.hw1_1000LOC5 temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC34 temp$6;
        short temp$7;
        com.accenture.lab.carfast.test.hw1_1000LOC0 temp$8;
        byte temp$10;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        i6 := @parameter6: int;
        i7 := @parameter7: int;
        i8 := @parameter8: int;
        i9 := @parameter9: int;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC1: void <init>()>();
        obj = temp$0;
        temp$1 = new com.accenture.lab.carfast.test.hw1_1000LOC25;
        specialinvoke temp$1.<com.accenture.lab.carfast.test.hw1_1000LOC25: void <init>()>();
        temp$2 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC1: char hw1_1000LOC1method0(java.lang.String,java.lang.String,com.accenture.lab.carfast.test.hw1_1000LOC25)>("emmhbisgcnckqnjitorgpiqnsvlqouzchxtkwwvkctkzdtnyifaodfbqdwaftcxetcnogrmsltwca", "xcdsfnetpjflwurpfmlybxscccaztvwzbavhthmfurxagvetgcmxucssoffkgykttvjjubjpvokfkrhfidbvnwfpfjutvsgyq", temp$1);
        temp$3 = new com.accenture.lab.carfast.test.hw1_1000LOC16;
        specialinvoke temp$3.<com.accenture.lab.carfast.test.hw1_1000LOC16: void <init>()>();
        temp$4 = new com.accenture.lab.carfast.test.hw1_1000LOC5;
        specialinvoke temp$4.<com.accenture.lab.carfast.test.hw1_1000LOC5: void <init>()>();
        temp$5 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC1: char hw1_1000LOC1method1(com.accenture.lab.carfast.test.hw1_1000LOC16,java.lang.String,com.accenture.lab.carfast.test.hw1_1000LOC5,double,short,double,short)>(temp$3, "vhuaiexwpafzuvgcwnxqrsyigoqhpqsqyfkcllclbmkgoybaiwpbeqkmxtsmtldkbswbbeqgcixswiol", temp$4, 0.947327843941365, 6883, 0.9975475922220187, 28925);
        temp$6 = new com.accenture.lab.carfast.test.hw1_1000LOC34;
        specialinvoke temp$6.<com.accenture.lab.carfast.test.hw1_1000LOC34: void <init>()>();
        temp$7 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC1: short hw1_1000LOC1method2(short,long,com.accenture.lab.carfast.test.hw1_1000LOC34,int,byte,int,short)>(17432, 62L, temp$6, i9, -20, i3, 28286);
        temp$8 = new com.accenture.lab.carfast.test.hw1_1000LOC0;
        specialinvoke temp$8.<com.accenture.lab.carfast.test.hw1_1000LOC0: void <init>()>();
        temp$9 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC1: char hw1_1000LOC1method3(long,java.lang.String,long,com.accenture.lab.carfast.test.hw1_1000LOC0,double,byte,long)>(96L, "uoipmzbvttedmolbejocyhnuxpdwbwnqfgnrlpmpxyotgqwqclbe", 89L, temp$8, 0.7376801769568396, -36, 13L);
        temp$10 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC1: byte hw1_1000LOC1method4(double,float,short,double,short)>(0.556314429962238, 0.95429F, 13180, 0.4220769384639482, 7341);
        return;
    }

    public void <init>()
    {
        com.accenture.lab.carfast.test.hw1_1000LOC1 this;
        byte[] temp$0;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = newarray (byte)[90];
        this.<com.accenture.lab.carfast.test.hw1_1000LOC1: byte[] f0> = temp$0;
        return;
    }
}
