public class com.accenture.lab.carfast.test.hw1_1000LOC4 extends java.lang.Object
{
    float f0;
    static double[] f1;
    short[] f2;

    static void <clinit>()
    {
        double[] temp$0;

        temp$0 = newarray (double)[41];
        <com.accenture.lab.carfast.test.hw1_1000LOC4: double[] f1> = temp$0;
        return;
    }

    public static char hw1_1000LOC4method0(double, char, java.lang.String)
    {
        double var0, temp$25, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, temp$41, temp$46, temp$47, temp$48;
        char var1;
        java.lang.String var2;
        com.accenture.lab.carfast.test.hw1_1000LOC4 classObj, temp$0;
        int i, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$40, temp$43, temp$45, temp$49, temp$50, temp$51;
        double[] temp$42, temp$44;

        var0 := @parameter0: double;
        var1 := @parameter1: char;
        var2 := @parameter2: java.lang.String;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 9 goto label1;

        goto label13;

     label1:
        nop;
        temp$1 = (int) var1;
        temp$2 = temp$1 / 106;
        temp$3 = (int) var1;
        temp$4 = temp$3 + 99;
        if temp$2 != temp$4 goto label3;

        goto label2;

     label2:
        nop;
        temp$5 = (int) var1;
        temp$6 = temp$5 * 117;
        temp$7 = (int) var1;
        temp$8 = temp$7 / 115;
        if temp$6 == temp$8 goto label3;

        goto label12;

     label3:
        nop;
        temp$9 = (int) var1;
        temp$10 = (int) var1;
        temp$11 = temp$10 + 101;
        temp$12 = (int) var1;
        temp$13 = temp$12 + 111;
        temp$14 = temp$11 + temp$13;
        temp$15 = temp$14 % 117;
        temp$16 = temp$9 + 118;
        if temp$16 >= temp$15 goto label4;

        goto label11;

     label4:
        nop;
        temp$17 = (int) var1;
        temp$18 = temp$17 * 102;
        temp$19 = (int) var1;
        temp$20 = temp$19 % 118;
        if temp$18 <= temp$20 goto label5;

        goto label11;

     label5:
        nop;
        temp$21 = (int) var1;
        temp$22 = temp$21 * 109;
        temp$23 = (int) var1;
        temp$24 = temp$23 % 119;
        if temp$22 != temp$24 goto label6;

        goto label11;

     label6:
        nop;
        temp$25 = var0;
        temp$26 = temp$25 + 0.1823983383030966;
        temp$27 = var0;
        temp$28 = temp$27 + 0.7750829110486891;
        temp$29 = temp$28 % 0.7291862590260687;
        temp$30 = var0 - 0.9454181581099927;
        temp$31 = temp$29 * temp$30;
        temp$32 = var0;
        temp$33 = temp$26 + temp$31;
        temp$34 = temp$32 + 0.9286240021808185;
        temp$35 = temp$33 - temp$34;
        temp$36 = var0 * 0.27711793659605777;
        temp$37 = temp$35 * temp$36;
        temp$38 = var0;
        temp$39 = temp$38 + 0.5909285499672254;
        temp$40 = temp$37 cmpl temp$39;
        if temp$40 <= 0 goto label10;

        goto label7;

     label7:
        nop;
        temp$41 = var0 * 0.09118009533687721;
        temp$42 = <com.accenture.lab.carfast.test.hw1_1000LOC4: double[] f1>;
        temp$43 = 25;
        temp$44 = <com.accenture.lab.carfast.test.hw1_1000LOC4: double[] f1>;
        temp$45 = 9;
        temp$46 = temp$42[temp$43];
        temp$47 = temp$44[temp$45];
        temp$48 = temp$46 - temp$47;
        temp$49 = temp$41 cmpg temp$48;
        if temp$49 >= 0 goto label9;

        goto label8;

     label8:
        nop;

     label9:
        nop;

     label10:
        nop;

     label11:
        nop;

     label12:
        nop;
        nop;
        temp$50 = i;
        temp$51 = temp$50 + 1;
        i = temp$51;
        goto label0;

     label13:
        nop;
        return var1;
    }

    public long hw1_1000LOC4method1(java.lang.String, int, com.accenture.lab.carfast.test.hw1_1000LOC3, com.accenture.lab.carfast.test.hw1_1000LOC0, float)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC4 this, classObj, temp$0;
        java.lang.String var0, temp$5, temp$7, temp$8, temp$10, temp$11, temp$13, temp$14, temp$16;
        int var1, temp$19, temp$45;
        com.accenture.lab.carfast.test.hw1_1000LOC3 var2;
        com.accenture.lab.carfast.test.hw1_1000LOC0 var3;
        float var4, temp$17, temp$18, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, temp$40, temp$41, temp$42, temp$43, temp$44;
        java.lang.StringBuffer temp$1, temp$2, temp$3, temp$4, temp$6, temp$9, temp$12, temp$15;
        java.io.PrintStream temp$46;
        long temp$47;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC4;
        var0 := @parameter0: java.lang.String;
        var1 := @parameter1: int;
        var2 := @parameter2: com.accenture.lab.carfast.test.hw1_1000LOC3;
        var3 := @parameter3: com.accenture.lab.carfast.test.hw1_1000LOC0;
        var4 := @parameter4: float;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        classObj = temp$0;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        temp$2 = new java.lang.StringBuffer;
        specialinvoke temp$2.<java.lang.StringBuffer: void <init>()>();
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        temp$4 = new java.lang.StringBuffer;
        specialinvoke temp$4.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("iakbzloqygjwzpiijddzvckrjiiqpsirnwaikoyfvasagafbjhfbbgvmjxigoooopkqydlm");
        temp$5 = virtualinvoke temp$4.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$5);
        temp$6 = new java.lang.StringBuffer;
        specialinvoke temp$6.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("bjt");
        temp$7 = virtualinvoke temp$6.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$7);
        temp$8 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$8);
        temp$9 = new java.lang.StringBuffer;
        specialinvoke temp$9.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("ccahoesgpxjbldaicvqezxrwetpspbxiemelidpkotjowmipzwrgyrsjpehbtnekjskynlmxxpthevqfrddxtl");
        temp$10 = virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$10);
        temp$11 = virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$11);
        temp$12 = new java.lang.StringBuffer;
        specialinvoke temp$12.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("pu");
        temp$13 = virtualinvoke temp$12.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$13);
        temp$14 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$15 = new java.lang.StringBuffer;
        specialinvoke temp$15.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var0);
        virtualinvoke temp$15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("llcabupnyabmtcspvenjktcjhpoymakwaklinjctwfqycdnbfjykokjflblyqgeaymjwsmbcbnc");
        temp$16 = virtualinvoke temp$15.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$14 != temp$16 goto label0;

        goto label4;

     label0:
        nop;
        temp$17 = var4 * 0.93352276F;
        temp$18 = var4 % 0.31929594F;
        temp$19 = temp$17 cmpg temp$18;
        if temp$19 > 0 goto label3;

        goto label1;

     label1:
        nop;
        temp$20 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$21 = temp$20 - 0.28735006F;
        temp$22 = temp$21;
        temp$23 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$24 = temp$23 - 0.04671055F;
        temp$25 = temp$22 + temp$24;
        temp$26 = temp$25 % 0.2773978F;
        temp$27 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$28 = temp$27 * 0.19377005F;
        temp$29 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$30 = temp$29 - 0.5466074F;
        temp$31 = temp$28 - temp$30;
        temp$32 = temp$31;
        temp$33 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$34 = temp$33 * 0.47791332F;
        temp$35 = temp$34;
        temp$36 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$37 = temp$36 / 0.23092264F;
        temp$38 = this.<com.accenture.lab.carfast.test.hw1_1000LOC4: float f0>;
        temp$39 = temp$38 / 0.7897704F;
        temp$40 = temp$37 * temp$39;
        temp$41 = temp$35 + temp$40;
        temp$42 = temp$32 + temp$41;
        temp$43 = temp$26 * temp$42;
        temp$44 = var4 / 0.3103901F;
        temp$45 = temp$43 cmpg temp$44;
        if temp$45 != 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$46 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$46.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC4 - hw1_1000LOC4method1- LineInMethod: 5");

     label3:
        nop;

     label4:
        nop;
        temp$47 = 26L;
        return temp$47;
    }

    public static long hw1_1000LOC4method2(float, double, int)
    {
        float var0;
        double var1, temp$1, temp$2;
        int var2, temp$3;
        com.accenture.lab.carfast.test.hw1_1000LOC4 classObj, temp$0;
        java.io.PrintStream temp$4, temp$5;
        long temp$6;

        var0 := @parameter0: float;
        var1 := @parameter1: double;
        var2 := @parameter2: int;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        classObj = temp$0;
        temp$1 = var1 - 0.800060319309899;
        temp$2 = var1 * 0.2800583856781411;
        temp$3 = temp$1 cmpg temp$2;
        if temp$3 == 0 goto label1;

        goto label0;

     label0:
        nop;
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC4 - hw1_1000LOC4method2- LineInMethod: 5");
        goto label2;

     label1:
        nop;
        temp$5 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$5.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC4 - hw1_1000LOC4method2- LineInMethod: 8");

     label2:
        nop;
        temp$6 = 80L;
        return temp$6;
    }

    public byte hw1_1000LOC4method3(byte, double, float)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC4 this, classObj, temp$0;
        byte var0;
        double var1, temp$8;
        float var2;
        int i, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$9, temp$10;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC4;
        var0 := @parameter0: byte;
        var1 := @parameter1: double;
        var2 := @parameter2: float;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 9 goto label1;

        goto label4;

     label1:
        nop;
        temp$1 = (int) var0;
        temp$2 = temp$1 + 69;
        temp$3 = (int) var0;
        temp$4 = temp$3 / 77;
        temp$5 = (int) var0;
        temp$6 = temp$5 - -116;
        temp$7 = temp$2 + temp$4;
        if temp$7 >= temp$6 goto label2;

        goto label3;

     label2:
        nop;
        temp$8 = 0.260906130896128;
        var1 = temp$8;

     label3:
        nop;
        nop;
        temp$9 = i;
        temp$10 = temp$9 + 1;
        i = temp$10;
        goto label0;

     label4:
        nop;
        return var0;
    }

    public static float hw1_1000LOC4method4(double, float, java.lang.String, char, short, double)
    {
        double var0, var5, temp$26, temp$27, temp$28, temp$29, temp$30;
        float var1, temp$1, temp$2, temp$3, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$13, temp$14;
        java.lang.String var2, temp$17, temp$20, temp$22, temp$23;
        char var3;
        short var4;
        com.accenture.lab.carfast.test.hw1_1000LOC4 classObj, temp$0;
        int temp$4, temp$12, temp$15, temp$25;
        java.lang.StringBuffer temp$16, temp$18, temp$19, temp$21;
        double[] temp$24;

        var0 := @parameter0: double;
        var1 := @parameter1: float;
        var2 := @parameter2: java.lang.String;
        var3 := @parameter3: char;
        var4 := @parameter4: short;
        var5 := @parameter5: double;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        classObj = temp$0;
        temp$1 = var1 - 0.048294365F;
        temp$2 = var1 - 0.83295953F;
        temp$3 = temp$2 / 0.7807736F;
        temp$4 = temp$1 cmpl temp$3;
        if temp$4 < 0 goto label6;

        goto label0;

     label0:
        nop;
        temp$5 = var1 * 0.07267547F;
        temp$6 = var1 - 0.08933991F;
        temp$7 = temp$6;
        temp$8 = var1 % 0.07428944F;
        temp$9 = var1 - 0.5640482F;
        temp$10 = temp$8 * temp$9;
        temp$11 = temp$7 + temp$10;
        temp$12 = temp$5 cmpl temp$11;
        if temp$12 <= 0 goto label6;

        goto label1;

     label1:
        nop;
        temp$13 = var1 - 0.9046515F;
        temp$14 = var1 - 0.2134006F;
        temp$15 = temp$13 cmpg temp$14;
        if temp$15 > 0 goto label5;

        goto label2;

     label2:
        nop;
        temp$16 = new java.lang.StringBuffer;
        specialinvoke temp$16.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("bvsigzbdcvrhvincytjuibubgmhbzqohxirhzqefkuxjatvedbiahhfdpxakapfqrxsjjhiwsobwtniavaqjzvgffbzljiqjwmtzn");
        temp$17 = virtualinvoke temp$16.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$18 = new java.lang.StringBuffer;
        specialinvoke temp$18.<java.lang.StringBuffer: void <init>()>();
        temp$19 = new java.lang.StringBuffer;
        specialinvoke temp$19.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("rcowbwgujxkvefoazzazqembqkdfweuofmfftlrwbzzlqgsotakzmkcfevufpbtpcvbdaitwdvytqtpbiybxxmjcttqs");
        temp$20 = virtualinvoke temp$19.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$20);
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("vpuhwoaqwmvmkkpswqnzkwtwqbfwiydszticupumosngshjlzudhjcpaanbbgaupkxlcpxtqktysowigzbxibqhqtzdwgnephsou");
        temp$22 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$22);
        temp$23 = virtualinvoke temp$18.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$17 == temp$23 goto label3;

        goto label4;

     label3:
        nop;
        temp$24 = <com.accenture.lab.carfast.test.hw1_1000LOC4: double[] f1>;
        temp$25 = 6;
        temp$26 = var0 * 0.45330827293526965;
        temp$27 = var0 % 0.8749461188737411;
        temp$28 = temp$26 * temp$27;
        temp$29 = var5 * 0.712143813243271;
        temp$30 = temp$28 * temp$29;
        temp$24[temp$25] = temp$30;

     label4:
        nop;

     label5:
        nop;

     label6:
        nop;
        return var1;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        com.accenture.lab.carfast.test.hw1_1000LOC4 obj, temp$0;
        char temp$1;
        com.accenture.lab.carfast.test.hw1_1000LOC3 temp$2;
        com.accenture.lab.carfast.test.hw1_1000LOC0 temp$3;
        long temp$4, temp$5;
        byte temp$6;
        float temp$7;

        args := @parameter0: java.lang.String[];
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        obj = temp$0;
        temp$1 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC4: char hw1_1000LOC4method0(double,char,java.lang.String)>(0.3607195682681561, 119, "dkxlskrqnyroctvvesbyulvrv");
        temp$2 = new com.accenture.lab.carfast.test.hw1_1000LOC3;
        specialinvoke temp$2.<com.accenture.lab.carfast.test.hw1_1000LOC3: void <init>()>();
        temp$3 = new com.accenture.lab.carfast.test.hw1_1000LOC0;
        specialinvoke temp$3.<com.accenture.lab.carfast.test.hw1_1000LOC0: void <init>()>();
        temp$4 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC4: long hw1_1000LOC4method1(java.lang.String,int,com.accenture.lab.carfast.test.hw1_1000LOC3,com.accenture.lab.carfast.test.hw1_1000LOC0,float)>("aqyxucsiucueqqkfzcipwicbmsgmgqedtvtfytufefvaoxtxdmhzvrohljjtggbmbwixjykzt", 96, temp$2, temp$3, 0.38607138F);
        temp$5 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC4: long hw1_1000LOC4method2(float,double,int)>(0.69192624F, 0.7316499678828252, 72);
        temp$6 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC4: byte hw1_1000LOC4method3(byte,double,float)>(68, 0.9534395668889581, 0.25801593F);
        temp$7 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC4: float hw1_1000LOC4method4(double,float,java.lang.String,char,short,double)>(0.335895340204475, 0.9318578F, "qnbbhvknxqozv", 101, 21860, 0.07619828507692661);
        return;
    }

    public static void singleEntry(int, int, int, int, int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9;
        com.accenture.lab.carfast.test.hw1_1000LOC4 obj, temp$0;
        char temp$1;
        com.accenture.lab.carfast.test.hw1_1000LOC3 temp$2;
        com.accenture.lab.carfast.test.hw1_1000LOC0 temp$3;
        long temp$4, temp$5;
        byte temp$6;
        float temp$7;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        i6 := @parameter6: int;
        i7 := @parameter7: int;
        i8 := @parameter8: int;
        i9 := @parameter9: int;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC4: void <init>()>();
        obj = temp$0;
        temp$1 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC4: char hw1_1000LOC4method0(double,char,java.lang.String)>(0.334396081667504, 108, "isenezskkxzaadbhvjhdwyzoofujicfuregfbblyizzrvgtnxjurohgnpgvqrwaadfkrhgqq");
        temp$2 = new com.accenture.lab.carfast.test.hw1_1000LOC3;
        specialinvoke temp$2.<com.accenture.lab.carfast.test.hw1_1000LOC3: void <init>()>();
        temp$3 = new com.accenture.lab.carfast.test.hw1_1000LOC0;
        specialinvoke temp$3.<com.accenture.lab.carfast.test.hw1_1000LOC0: void <init>()>();
        temp$4 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC4: long hw1_1000LOC4method1(java.lang.String,int,com.accenture.lab.carfast.test.hw1_1000LOC3,com.accenture.lab.carfast.test.hw1_1000LOC0,float)>("xevrzrwlxkgajjdycajgljbxjqtqmpaprbu", i8, temp$2, temp$3, 0.7213776F);
        temp$5 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC4: long hw1_1000LOC4method2(float,double,int)>(0.6387158F, 0.6967832314347672, i2);
        temp$6 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC4: byte hw1_1000LOC4method3(byte,double,float)>(60, 0.845086478950683, 0.2144596F);
        temp$7 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC4: float hw1_1000LOC4method4(double,float,java.lang.String,char,short,double)>(0.5762826806751216, 0.13035977F, "puxsxmealfndoxwmbe", 103, 2030, 0.37014229738625737);
        return;
    }

    public void <init>()
    {
        com.accenture.lab.carfast.test.hw1_1000LOC4 this;
        short[] temp$0;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC4;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = newarray (short)[36];
        this.<com.accenture.lab.carfast.test.hw1_1000LOC4: short[] f2> = temp$0;
        return;
    }
}
