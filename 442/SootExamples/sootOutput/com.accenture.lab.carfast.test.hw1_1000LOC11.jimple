public class com.accenture.lab.carfast.test.hw1_1000LOC11 extends com.accenture.lab.carfast.test.hw1_1000LOC12 implements com.accenture.lab.carfast.test.hw1_1000LOCInterface6
{
    static long[] f0;
    static long f1;

    static void <clinit>()
    {
        long[] temp$0;

        temp$0 = newarray (long)[18];
        <com.accenture.lab.carfast.test.hw1_1000LOC11: long[] f0> = temp$0;
        return;
    }

    public int hw1_1000LOCInterface6Method0(short, short, byte, short, short, int, long, com.accenture.lab.carfast.test.hw1_1000LOC0)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC11 this, classObj, temp$0;
        short var0, var1, var3, var4;
        byte var2;
        int var5, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27;
        long var6, temp$28, temp$29, temp$30;
        com.accenture.lab.carfast.test.hw1_1000LOC0 var7;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC11;
        var0 := @parameter0: short;
        var1 := @parameter1: short;
        var2 := @parameter2: byte;
        var3 := @parameter3: short;
        var4 := @parameter4: short;
        var5 := @parameter5: int;
        var6 := @parameter6: long;
        var7 := @parameter7: com.accenture.lab.carfast.test.hw1_1000LOC0;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        temp$1 = (int) var0;
        temp$2 = (int) var3;
        temp$3 = temp$1 * temp$2;
        temp$4 = temp$3 * 11865;
        temp$5 = (int) var1;
        temp$6 = (int) var4;
        temp$7 = temp$5 * temp$6;
        temp$8 = temp$7;
        temp$9 = (int) var4;
        temp$10 = (int) var0;
        temp$11 = temp$9 * temp$10;
        temp$12 = (int) var4;
        temp$13 = (int) var3;
        temp$14 = temp$8 + temp$11;
        temp$15 = temp$12 + temp$13;
        temp$16 = temp$14 - temp$15;
        if temp$4 <= temp$16 goto label0;

        goto label3;

     label0:
        nop;
        temp$17 = var5 * 1;
        temp$18 = temp$17;
        temp$19 = var5 - 67;
        temp$20 = var5 - 46;
        temp$21 = temp$20 / 65;
        temp$22 = var5 / 90;
        temp$23 = temp$22;
        temp$24 = var5 - 4;
        temp$25 = temp$23 + temp$24;
        temp$26 = temp$21 * temp$25;
        temp$27 = temp$18 + temp$19;
        if temp$27 <= temp$26 goto label1;

        goto label2;

     label1:
        nop;
        temp$28 = var6;
        temp$29 = temp$28 + 8L;
        temp$30 = temp$29 / 17L;
        var6 = temp$30;

     label2:
        nop;

     label3:
        nop;
        return var5;
    }

    public int hw1_1000LOCInterface6Method1(byte, long, byte)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC11 this, classObj, temp$0;
        byte var0, var2;
        long var1;
        int temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$24, temp$25, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35, temp$36, temp$37, temp$38, temp$39, temp$40, temp$41, temp$42, temp$43, temp$44, temp$45, temp$46, temp$47, temp$48, temp$49, temp$50, temp$51, temp$52, temp$53, temp$54, temp$55, temp$56, temp$57, temp$58, temp$59, temp$60, temp$61, temp$62, temp$63, temp$64, temp$65, temp$66, temp$67, temp$69;
        java.io.PrintStream temp$68;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC11;
        var0 := @parameter0: byte;
        var1 := @parameter1: long;
        var2 := @parameter2: byte;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        temp$1 = (int) var2;
        temp$2 = (int) var0;
        temp$3 = temp$1 - temp$2;
        temp$4 = (int) var2;
        temp$5 = temp$4 * 5;
        if temp$3 == temp$5 goto label0;

        goto label11;

     label0:
        nop;
        temp$6 = (int) var0;
        temp$7 = (int) var2;
        temp$8 = temp$7 - 25;
        temp$9 = temp$6 + -62;
        if temp$9 <= temp$8 goto label1;

        goto label10;

     label1:
        nop;
        temp$10 = (int) var2;
        temp$11 = temp$10 - 74;
        temp$12 = (int) var2;
        temp$13 = temp$12 - -79;
        temp$14 = temp$13;
        temp$15 = (int) var0;
        temp$16 = temp$15 % -72;
        temp$17 = (int) var0;
        temp$18 = (int) var2;
        temp$19 = temp$17 + temp$18;
        temp$20 = (int) var2;
        temp$21 = (int) var0;
        temp$22 = temp$20 * temp$21;
        temp$23 = temp$19 + temp$22;
        temp$24 = temp$16 * temp$23;
        temp$25 = temp$14 + temp$24;
        temp$26 = (int) var0;
        temp$27 = (int) var2;
        temp$28 = temp$26 - temp$27;
        temp$29 = temp$25 + temp$28;
        temp$30 = temp$11 - temp$29;
        temp$31 = (int) var2;
        temp$32 = temp$31 * 120;
        if temp$30 >= temp$32 goto label2;

        goto label10;

     label2:
        nop;
        temp$33 = (int) var2;
        temp$34 = temp$33 / -101;
        temp$35 = (int) var2;
        temp$36 = temp$35 + 57;
        if temp$34 < temp$36 goto label3;

        goto label9;

     label3:
        nop;
        temp$37 = (int) var0;
        temp$38 = temp$37 % 109;
        temp$39 = (int) var0;
        temp$40 = (int) var2;
        temp$41 = temp$39 * temp$40;
        temp$42 = temp$38 - temp$41;
        temp$43 = (int) var0;
        temp$44 = (int) var2;
        temp$45 = temp$43 + temp$44;
        if temp$42 <= temp$45 goto label6;

        goto label4;

     label4:
        nop;
        temp$46 = (int) var2;
        temp$47 = temp$46 - -51;
        temp$48 = (int) var2;
        temp$49 = (int) var0;
        temp$50 = temp$48 + temp$49;
        temp$51 = temp$47 - temp$50;
        temp$52 = (int) var2;
        temp$53 = (int) var0;
        temp$54 = temp$52 - temp$53;
        if temp$51 < temp$54 goto label5;

        goto label8;

     label5:
        nop;
        temp$55 = (int) var0;
        temp$56 = (int) var2;
        temp$57 = temp$55 + temp$56;
        temp$58 = (int) var0;
        temp$59 = temp$58 * 104;
        temp$60 = (int) var0;
        temp$61 = temp$60 / 97;
        temp$62 = temp$57 + temp$59;
        if temp$62 != temp$61 goto label6;

        goto label8;

     label6:
        nop;
        temp$63 = (int) var2;
        temp$64 = temp$63 / 51;
        temp$65 = (int) var2;
        temp$66 = (int) var0;
        temp$67 = temp$65 * temp$66;
        if temp$64 < temp$67 goto label7;

        goto label8;

     label7:
        nop;
        temp$68 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$68.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC11 - hw1_1000LOCInterface6Method1- LineInMethod: 9");

     label8:
        nop;

     label9:
        nop;

     label10:
        nop;

     label11:
        nop;
        temp$69 = 43;
        return temp$69;
    }

    public static long hw1_1000LOC11method0(double, long, short)
    {
        double var0;
        long var1;
        short var2;
        com.accenture.lab.carfast.test.hw1_1000LOC11 classObj, temp$0;
        int i, temp$2, temp$3;
        java.io.PrintStream temp$1;

        var0 := @parameter0: double;
        var1 := @parameter1: long;
        var2 := @parameter2: short;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 4 goto label1;

        goto label2;

     label1:
        nop;
        temp$1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$1.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC11 - hw1_1000LOC11method0- LineInMethod: 3");
        nop;
        temp$2 = i;
        temp$3 = temp$2 + 1;
        i = temp$3;
        goto label0;

     label2:
        nop;
        return var1;
    }

    public static float hw1_1000LOC11method1(com.accenture.lab.carfast.test.hw1_1000LOC24, long, java.lang.String)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC24 var0;
        long var1, temp$5, temp$6, temp$9, temp$10, temp$12, temp$13, temp$14, temp$15, temp$17, temp$18, temp$19, temp$23, temp$24, temp$25, temp$26, temp$27, temp$28, temp$29, temp$30, temp$31, temp$32, temp$33, temp$34, temp$35;
        java.lang.String var2, temp$2, temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC11 classObj, temp$0;
        java.lang.StringBuffer temp$1, temp$3;
        long[] temp$7, temp$21;
        int temp$8, temp$11, temp$16, temp$20, temp$22;
        float temp$36;

        var0 := @parameter0: com.accenture.lab.carfast.test.hw1_1000LOC24;
        var1 := @parameter1: long;
        var2 := @parameter2: java.lang.String;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("lwyvqonzhprskzbitjbak");
        temp$2 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        temp$3 = new java.lang.StringBuffer;
        specialinvoke temp$3.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(var2);
        virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("wssrpbpilskcxlvcoqbhymdveawnsazvucnqbfdrewympqmrazbhtuiumjqlbdopmuurubbghzxdjwdhdngpblsgdarvwfck");
        temp$4 = virtualinvoke temp$3.<java.lang.StringBuffer: java.lang.String toString()>();
        if temp$2 != temp$4 goto label0;

        goto label7;

     label0:
        nop;
        temp$5 = var1 / 92L;
        temp$6 = <com.accenture.lab.carfast.test.hw1_1000LOC11: long f1>;
        temp$7 = <com.accenture.lab.carfast.test.hw1_1000LOC11: long[] f0>;
        temp$8 = 10;
        temp$9 = temp$7[temp$8];
        temp$10 = temp$6 + temp$9;
        temp$11 = temp$5 cmp temp$10;
        if temp$11 < 0 goto label6;

        goto label1;

     label1:
        nop;
        temp$12 = var1 / 95L;
        temp$13 = var1 / 40L;
        temp$14 = temp$12 - temp$13;
        temp$15 = var1 / 97L;
        temp$16 = temp$14 cmp temp$15;
        if temp$16 <= 0 goto label5;

        goto label2;

     label2:
        nop;
        temp$17 = var1 - 22L;
        temp$18 = var1;
        temp$19 = temp$18 + 76L;
        temp$20 = temp$17 cmp temp$19;
        if temp$20 <= 0 goto label4;

        goto label3;

     label3:
        nop;
        temp$21 = <com.accenture.lab.carfast.test.hw1_1000LOC11: long[] f0>;
        temp$22 = 4;
        temp$23 = var1 / 62L;
        temp$24 = temp$23;
        temp$25 = var1;
        temp$26 = var1 - 90L;
        temp$27 = temp$26;
        temp$28 = var1;
        temp$29 = temp$28 + 32L;
        temp$30 = var1 * 66L;
        temp$31 = temp$27 + temp$29;
        temp$32 = temp$31 - temp$30;
        temp$33 = temp$25 + 30L;
        temp$34 = temp$33 * temp$32;
        temp$35 = temp$24 + temp$34;
        temp$21[temp$22] = temp$35;

     label4:
        nop;

     label5:
        nop;

     label6:
        nop;

     label7:
        nop;
        temp$36 = 0.81864595F;
        return temp$36;
    }

    public static short hw1_1000LOC12method0(float, double, double, long, byte)
    {
        float var0;
        double var1, var2;
        long var3;
        byte var4;
        com.accenture.lab.carfast.test.hw1_1000LOC11 classObj, temp$0;
        int i, temp$1, temp$2, temp$3, temp$4, temp$6, temp$7;
        java.io.PrintStream temp$5;
        short temp$8;

        var0 := @parameter0: float;
        var1 := @parameter1: double;
        var2 := @parameter2: double;
        var3 := @parameter3: long;
        var4 := @parameter4: byte;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 4 goto label1;

        goto label4;

     label1:
        nop;
        temp$1 = (int) var4;
        temp$2 = temp$1 % 75;
        temp$3 = (int) var4;
        temp$4 = temp$3 * 50;
        if temp$2 >= temp$4 goto label2;

        goto label3;

     label2:
        nop;
        temp$5 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$5.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC11 - hw1_1000LOC12method0- LineInMethod: 5");

     label3:
        nop;
        nop;
        temp$6 = i;
        temp$7 = temp$6 + 1;
        i = temp$7;
        goto label0;

     label4:
        nop;
        temp$8 = 9085;
        return temp$8;
    }

    public static byte hw1_1000LOC11method3(short, byte, long, short, long, long, com.accenture.lab.carfast.test.hw1_1000LOC18, double)
    {
        short var0, var3;
        byte var1;
        long var2, var4, var5, temp$8, temp$9;
        com.accenture.lab.carfast.test.hw1_1000LOC18 var6;
        double var7;
        com.accenture.lab.carfast.test.hw1_1000LOC11 classObj, temp$0;
        int temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7;
        java.io.PrintStream temp$10;

        var0 := @parameter0: short;
        var1 := @parameter1: byte;
        var2 := @parameter2: long;
        var3 := @parameter3: short;
        var4 := @parameter4: long;
        var5 := @parameter5: long;
        var6 := @parameter6: com.accenture.lab.carfast.test.hw1_1000LOC18;
        var7 := @parameter7: double;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        temp$1 = (int) var1;
        temp$2 = temp$1 / -125;
        temp$3 = (int) var1;
        temp$4 = temp$3 * 105;
        temp$5 = temp$2 - temp$4;
        temp$6 = (int) var1;
        temp$7 = temp$6 - 84;
        if temp$5 == temp$7 goto label0;

        goto label1;

     label0:
        nop;
        temp$8 = var4;
        temp$9 = temp$8 + var2;
        <com.accenture.lab.carfast.test.hw1_1000LOC11: long f1> = temp$9;
        goto label2;

     label1:
        nop;
        temp$10 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$10.<java.io.PrintStream: void println(java.lang.String)>("hw1_1000LOC11 - hw1_1000LOC11method3- LineInMethod: 6");

     label2:
        nop;
        return var1;
    }

    public static float hw1_1000LOC12method1(com.accenture.lab.carfast.test.hw1_1000LOC7, byte, byte, com.accenture.lab.carfast.test.hw1_1000LOC8)
    {
        com.accenture.lab.carfast.test.hw1_1000LOC7 var0;
        byte var1, var2;
        com.accenture.lab.carfast.test.hw1_1000LOC8 var3;
        com.accenture.lab.carfast.test.hw1_1000LOC11 classObj, temp$0;
        int i, temp$1, temp$2, temp$3, temp$4, temp$5, temp$6, temp$7, temp$8, temp$9, temp$10, temp$11, temp$12, temp$13, temp$14, temp$15, temp$16, temp$17, temp$18, temp$19, temp$20, temp$21, temp$22, temp$23, temp$25, temp$27, temp$28;
        long[] temp$24;
        long temp$26;
        float temp$29;

        var0 := @parameter0: com.accenture.lab.carfast.test.hw1_1000LOC7;
        var1 := @parameter1: byte;
        var2 := @parameter2: byte;
        var3 := @parameter3: com.accenture.lab.carfast.test.hw1_1000LOC8;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        classObj = temp$0;
        i = 0;

     label0:
        nop;
        if i < 4 goto label1;

        goto label8;

     label1:
        nop;
        temp$1 = (int) var2;
        temp$2 = (int) var1;
        temp$3 = temp$2 - -96;
        temp$4 = temp$3 / 127;
        temp$5 = temp$1 + -27;
        temp$6 = temp$5 * temp$4;
        temp$7 = (int) var2;
        temp$8 = temp$7 * -34;
        if temp$6 != temp$8 goto label2;

        goto label7;

     label2:
        nop;
        temp$9 = (int) var1;
        temp$10 = (int) var1;
        temp$11 = temp$10 - -3;
        temp$12 = temp$11;
        temp$13 = (int) var1;
        temp$14 = (int) var2;
        temp$15 = temp$13 + temp$14;
        temp$16 = temp$9 + 85;
        temp$17 = temp$12 + temp$15;
        if temp$16 >= temp$17 goto label3;

        goto label6;

     label3:
        nop;
        temp$18 = (int) var1;
        temp$19 = temp$18 % 118;
        temp$20 = temp$19 % 15;
        temp$21 = (int) var1;
        temp$22 = (int) var2;
        temp$23 = temp$21 + temp$22;
        if temp$20 < temp$23 goto label4;

        goto label5;

     label4:
        nop;
        temp$24 = <com.accenture.lab.carfast.test.hw1_1000LOC11: long[] f0>;
        temp$25 = 6;
        temp$26 = 0L;
        temp$24[temp$25] = temp$26;

     label5:
        nop;

     label6:
        nop;

     label7:
        nop;
        nop;
        temp$27 = i;
        temp$28 = temp$27 + 1;
        i = temp$28;
        goto label0;

     label8:
        nop;
        temp$29 = 0.6513664F;
        return temp$29;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        com.accenture.lab.carfast.test.hw1_1000LOC11 obj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC0 temp$1;
        int temp$2, temp$3;
        long temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC24 temp$5;
        float temp$6, temp$12;
        short temp$7;
        com.accenture.lab.carfast.test.hw1_1000LOC18 temp$8;
        byte temp$9;
        com.accenture.lab.carfast.test.hw1_1000LOC7 temp$10;
        com.accenture.lab.carfast.test.hw1_1000LOC8 temp$11;

        args := @parameter0: java.lang.String[];
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        obj = temp$0;
        temp$1 = new com.accenture.lab.carfast.test.hw1_1000LOC0;
        specialinvoke temp$1.<com.accenture.lab.carfast.test.hw1_1000LOC0: void <init>()>();
        temp$2 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC11: int hw1_1000LOCInterface6Method0(short,short,byte,short,short,int,long,com.accenture.lab.carfast.test.hw1_1000LOC0)>(15188, 16652, 109, 7734, 14221, 28, 26L, temp$1);
        temp$3 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC11: int hw1_1000LOCInterface6Method1(byte,long,byte)>(27, 39L, -127);
        temp$4 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: long hw1_1000LOC11method0(double,long,short)>(0.34508744710046413, 15L, 15961);
        temp$5 = new com.accenture.lab.carfast.test.hw1_1000LOC24;
        specialinvoke temp$5.<com.accenture.lab.carfast.test.hw1_1000LOC24: void <init>()>();
        temp$6 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: float hw1_1000LOC11method1(com.accenture.lab.carfast.test.hw1_1000LOC24,long,java.lang.String)>(temp$5, 21L, "mrqtlposxieksxpgojxubrfeqdudwldsvquglwamcziuajphoglgygtrapatujexxswitfamoixzhgxrkwynuxcmeetgxhz");
        temp$7 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: short hw1_1000LOC12method0(float,double,double,long,byte)>(0.27594894F, 0.754595175580255, 0.0718311876173654, 51L, -31);
        temp$8 = new com.accenture.lab.carfast.test.hw1_1000LOC18;
        specialinvoke temp$8.<com.accenture.lab.carfast.test.hw1_1000LOC18: void <init>()>();
        temp$9 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: byte hw1_1000LOC11method3(short,byte,long,short,long,long,com.accenture.lab.carfast.test.hw1_1000LOC18,double)>(1860, -78, 28L, 9160, 90L, 24L, temp$8, 0.7369024057732816);
        temp$10 = new com.accenture.lab.carfast.test.hw1_1000LOC7;
        specialinvoke temp$10.<com.accenture.lab.carfast.test.hw1_1000LOC7: void <init>()>();
        temp$11 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$11.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        temp$12 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: float hw1_1000LOC12method1(com.accenture.lab.carfast.test.hw1_1000LOC7,byte,byte,com.accenture.lab.carfast.test.hw1_1000LOC8)>(temp$10, 79, -44, temp$11);
        return;
    }

    public static void singleEntry(int, int, int, int, int, int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, temp$2, temp$3;
        com.accenture.lab.carfast.test.hw1_1000LOC11 obj, temp$0;
        com.accenture.lab.carfast.test.hw1_1000LOC0 temp$1;
        long temp$4;
        com.accenture.lab.carfast.test.hw1_1000LOC24 temp$5;
        float temp$6, temp$12;
        short temp$7;
        com.accenture.lab.carfast.test.hw1_1000LOC18 temp$8;
        byte temp$9;
        com.accenture.lab.carfast.test.hw1_1000LOC7 temp$10;
        com.accenture.lab.carfast.test.hw1_1000LOC8 temp$11;

        i0 := @parameter0: int;
        i1 := @parameter1: int;
        i2 := @parameter2: int;
        i3 := @parameter3: int;
        i4 := @parameter4: int;
        i5 := @parameter5: int;
        i6 := @parameter6: int;
        i7 := @parameter7: int;
        i8 := @parameter8: int;
        i9 := @parameter9: int;
        temp$0 = new com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke temp$0.<com.accenture.lab.carfast.test.hw1_1000LOC11: void <init>()>();
        obj = temp$0;
        temp$1 = new com.accenture.lab.carfast.test.hw1_1000LOC0;
        specialinvoke temp$1.<com.accenture.lab.carfast.test.hw1_1000LOC0: void <init>()>();
        temp$2 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC11: int hw1_1000LOCInterface6Method0(short,short,byte,short,short,int,long,com.accenture.lab.carfast.test.hw1_1000LOC0)>(16183, 5762, -4, 1451, 3424, i6, 53L, temp$1);
        temp$3 = virtualinvoke obj.<com.accenture.lab.carfast.test.hw1_1000LOC11: int hw1_1000LOCInterface6Method1(byte,long,byte)>(13, 90L, 92);
        temp$4 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: long hw1_1000LOC11method0(double,long,short)>(0.404867032360657, 76L, 20381);
        temp$5 = new com.accenture.lab.carfast.test.hw1_1000LOC24;
        specialinvoke temp$5.<com.accenture.lab.carfast.test.hw1_1000LOC24: void <init>()>();
        temp$6 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: float hw1_1000LOC11method1(com.accenture.lab.carfast.test.hw1_1000LOC24,long,java.lang.String)>(temp$5, 62L, "glwrvsrdgewompcnvujtcuvfxbxcczdcdmbuswevjzuhhfetucucjegstji");
        temp$7 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: short hw1_1000LOC12method0(float,double,double,long,byte)>(0.40383583F, 0.6642737586282892, 0.6716728425924959, 75L, 51);
        temp$8 = new com.accenture.lab.carfast.test.hw1_1000LOC18;
        specialinvoke temp$8.<com.accenture.lab.carfast.test.hw1_1000LOC18: void <init>()>();
        temp$9 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: byte hw1_1000LOC11method3(short,byte,long,short,long,long,com.accenture.lab.carfast.test.hw1_1000LOC18,double)>(5384, 122, 6L, 8166, 91L, 91L, temp$8, 0.00403218115073023);
        temp$10 = new com.accenture.lab.carfast.test.hw1_1000LOC7;
        specialinvoke temp$10.<com.accenture.lab.carfast.test.hw1_1000LOC7: void <init>()>();
        temp$11 = new com.accenture.lab.carfast.test.hw1_1000LOC8;
        specialinvoke temp$11.<com.accenture.lab.carfast.test.hw1_1000LOC8: void <init>()>();
        temp$12 = staticinvoke <com.accenture.lab.carfast.test.hw1_1000LOC11: float hw1_1000LOC12method1(com.accenture.lab.carfast.test.hw1_1000LOC7,byte,byte,com.accenture.lab.carfast.test.hw1_1000LOC8)>(temp$10, 41, 73, temp$11);
        return;
    }

    public void <init>()
    {
        com.accenture.lab.carfast.test.hw1_1000LOC11 this;

        this := @this: com.accenture.lab.carfast.test.hw1_1000LOC11;
        specialinvoke this.<com.accenture.lab.carfast.test.hw1_1000LOC12: void <init>()>();
        return;
    }
}
