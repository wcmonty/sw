<?xml version="1.0"?><st-source><component-created><name>SmaCC Namespace</name> <type>package</type></component-created><parcel-loaded><name>SmaCC Namespace</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'SmaCC' 'SmaCC Namespace.pcl'))</filename></parcel-loaded><component-created><name>SmaCC Runtime</name> <type>package</type></component-created><parcel-loaded><name>SmaCC Runtime</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'SmaCC' 'SmaCC Runtime.pcl'))</filename></parcel-loaded><component-created><name>ExtraEmphases</name> <type>package</type></component-created><parcel-loaded><name>ExtraEmphases</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'ExtraEmphases.pcl'))</filename></parcel-loaded><component-created><name>TextHighlighting</name> <type>package</type></component-created><parcel-loaded><name>TextHighlighting</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'TextHighlighting.pcl'))</filename></parcel-loaded><component-created><name>HighlightingStyles</name> <type>package</type></component-created><parcel-loaded><name>HighlightingStyles</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'HighlightingStyles.pcl'))</filename></parcel-loaded><component-created><name>RBCodeHighlighting</name> <type>package</type></component-created><parcel-loaded><name>RBCodeHighlighting</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'RBCodeHighlighting.pcl'))</filename></parcel-loaded><component-created><name>ClassCloning</name> <type>package</type></component-created><parcel-loaded><name>ClassCloning</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'ClassCloning.pcl'))</filename></parcel-loaded><component-created><name>Method Wrapper Base</name> <type>package</type></component-created><parcel-loaded><name>Method Wrapper Base</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'MethodWrappers' 'Method Wrapper Base.pcl'))</filename></parcel-loaded><component-created><name>RBDynamicRefactorings</name> <type>package</type></component-created><parcel-loaded><name>RBDynamicRefactorings</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'RBDynamicRefactorings.pcl'))</filename></parcel-loaded><component-created><name>RBDynamicRefactoringUI</name> <type>package</type></component-created><parcel-loaded><name>RBDynamicRefactoringUI</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'RBDynamicRefactoringUI.pcl'))</filename></parcel-loaded><component-created><name>RBPrimitivesBrowsing</name> <type>package</type></component-created><parcel-loaded><name>RBPrimitivesBrowsing</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'RBPrimitivesBrowsing.pcl'))</filename></parcel-loaded><component-created><name>AutoComplete</name> <type>package</type></component-created><parcel-loaded><name>AutoComplete</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'AutoComplete.pcl'))</filename></parcel-loaded><component-created><name>CS474</name> <type>package</type></component-created><bundle-structure><name>StoreBase</name> <structure>#(#(#package 'Store-Base') #(#bundle 'Store-Database Support') #(#bundle 'Store-Image Support') #(#bundle 'Store-UI') #(#package 'Store-Change Management') #(#package 'Store-User Management') #(#package 'Store-Ownership') #(#package 'Atomic Compiling and Loading') #(#bundle 'Store II') #(#package 'CS474'))</structure></bundle-structure><bundle-structure><name>StoreBase</name> <structure>#(#(#package 'Store-Base') #(#bundle 'Store-Database Support') #(#bundle 'Store-Image Support') #(#bundle 'Store-UI') #(#package 'Store-Change Management') #(#package 'Store-User Management') #(#package 'Store-Ownership') #(#package 'Atomic Compiling and Loading') #(#bundle 'Store II') #(#package 'CS474'))</structure></bundle-structure><component-rename><name>CS474</name> <type>package</type><newName>CS474-HW2</newName></component-rename><component-property><name>CS474-HW2</name> <type>package</type><property>packageName</property> <value>'CS474-HW2'</value></component-property><component-property><name>CS474-HW2</name> <type>package</type><property>comment</property> <value>'Package used for homework 2 in CS 474.'</value></component-property><class><name>RestaurantMenuItem</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name calories price </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>RestaurantMenuItem</class-id> <category>accessing</category><body package="CS474-HW2" selector="name">name	^name</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>accessing</category><body package="CS474-HW2" selector="name:">name: anObject	name := anObject</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>accessing</category><body package="CS474-HW2" selector="calories">calories	^calories</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>accessing</category><body package="CS474-HW2" selector="calories:">calories: anObject	calories := anObject</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>accessing</category><body package="CS474-HW2" selector="price">price	^price</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>accessing</category><body package="CS474-HW2" selector="price:">price: anObject	price := anObject</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	name := nil.	calories := nil.	price := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>RestaurantMenuItem class</class-id> <category>instance creation</category><body package="CS474-HW2" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><methods><class-id>RestaurantMenuItem</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	name := nil.	calories := nil.	price := nil.	^self</body></methods><comment><class-id>RestaurantMenuItem</class-id><body>RestaurantMenuItem is an abstract class for restaurant menu items.Instance Variables	calories	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	The number of calories	name	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	The name of the item	price	&lt;MessageForwarder | Object | ProtoObject | ProtoObject&gt;	The price of the item</body></comment><class><name>Appetizer</name><environment>Smalltalk</environment><super>RestaurantMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>Appetizer</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>Appetizer</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>Appetizer</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>FoodItem</name><environment>Smalltalk</environment><super>Appetizer</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>FoodItem</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>FoodItem</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>FoodItem</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>FoodItem removeFromSystem</do-it><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Appetizer</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Appetizer</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>Appetizer removeFromSystem</do-it><class><name>FoodItem</name><environment>Smalltalk</environment><super>RestaurantMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>FoodItem</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><class><name>BeverageItem</name><environment>Smalltalk</environment><super>RestaurantMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>BeverageItem</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><class><name>Appetizer</name><environment>Smalltalk</environment><super>FoodItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>Appetizer</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>Appetizer</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>Appetizer</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>MainDish</name><environment>Smalltalk</environment><super>FoodItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients sideDish </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>MainDish</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>MainDish</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>MainDish</class-id> <category>accessing</category><body package="CS474-HW2" selector="sideDish">sideDish	^sideDish</body></methods><methods><class-id>MainDish</class-id> <category>accessing</category><body package="CS474-HW2" selector="sideDish:">sideDish: anObject	sideDish := anObject</body></methods><methods><class-id>MainDish</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	sideDish := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>Dessert</name><environment>Smalltalk</environment><super>FoodItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>Dessert</class-id> <category>accessing</category><body package="CS474-HW2" selector="description">description	^description</body></methods><methods><class-id>Dessert</class-id> <category>accessing</category><body package="CS474-HW2" selector="description:">description: anObject	description := anObject</body></methods><methods><class-id>Dessert</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	description := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>Soda</name><environment>Smalltalk</environment><super>BeverageItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>Soda</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Replace this comment with the appropriate initialization code *** "	^self</body></methods><class><name>LongDrink</name><environment>Smalltalk</environment><super>BeverageItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474-HW2</package></attributes></class><methods><class-id>LongDrink</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>LongDrink</class-id> <category>accessing</category><body package="CS474-HW2" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>LongDrink</class-id> <category>initialize-release</category><body package="CS474-HW2" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><component-created><name>CS474</name> <type>package</type></component-created><bundle-structure><name>StoreBase</name> <structure>#(#(#package 'Store-Base') #(#bundle 'Store-Database Support') #(#bundle 'Store-Image Support') #(#bundle 'Store-UI') #(#package 'Store-Change Management') #(#package 'Store-User Management') #(#package 'Store-Ownership') #(#package 'Atomic Compiling and Loading') #(#bundle 'Store II') #(#package 'CS474'))</structure></bundle-structure><bundle-structure><name>StoreBase</name> <structure>#(#(#package 'Store-Base') #(#bundle 'Store-Database Support') #(#bundle 'Store-Image Support') #(#bundle 'Store-UI') #(#package 'Store-Change Management') #(#package 'Store-User Management') #(#package 'Store-Ownership') #(#package 'Atomic Compiling and Loading') #(#bundle 'Store II') #(#package 'CS474'))</structure></bundle-structure><bundle-structure><name>StoreBase</name> <structure>#(#(#package 'Store-Base') #(#bundle 'Store-Database Support') #(#bundle 'Store-Image Support') #(#bundle 'Store-UI') #(#package 'Store-Change Management') #(#package 'Store-User Management') #(#package 'Store-Ownership') #(#package 'Atomic Compiling and Loading') #(#bundle 'Store II'))</structure></bundle-structure><component-created><name>CS474</name> <type>package</type></component-created><component-property><name>CS474</name> <type>package</type><property>comment</property> <value>'Package for CS 474 Smalltalk Project 2.'</value></component-property><class><name>Test3</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>Test3 class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1185 315 1868 854 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 576 124 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 140 576 171 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 187 576 218 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			parent				addChild: ((AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: 'Foie Gras' asSymbol).			menu selection value inspect].	^self</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	"This stub method was generated by UIDefiner"	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;AppetizerFoodItem #'Main Course'-&gt;MainCourseFoodItem #'Dessert'-&gt;DessertFoodItem)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;LongDrink #'Soda'-&gt;SodaDrink)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	menu selection notNil ifTrue: [menu selection ].	^self</body></methods><methods><class-id>Test3</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><do-it>Test3 renameTo: #EROS</do-it><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 576 124 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 140 576 171 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 187 576 218 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) ) ) )</body></methods><component-created><name>SmaCC Namespace</name> <type>package</type></component-created><parcel-loaded><name>SmaCC Namespace</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'SmaCC' 'SmaCC Namespace.pcl'))</filename></parcel-loaded><component-created><name>SmaCC Runtime</name> <type>package</type></component-created><parcel-loaded><name>SmaCC Runtime</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'SmaCC' 'SmaCC Runtime.pcl'))</filename></parcel-loaded><component-created><name>ExtraEmphases</name> <type>package</type></component-created><parcel-loaded><name>ExtraEmphases</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'ExtraEmphases.pcl'))</filename></parcel-loaded><component-created><name>TextHighlighting</name> <type>package</type></component-created><parcel-loaded><name>TextHighlighting</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'TextHighlighting.pcl'))</filename></parcel-loaded><component-created><name>HighlightingStyles</name> <type>package</type></component-created><parcel-loaded><name>HighlightingStyles</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'HighlightingStyles.pcl'))</filename></parcel-loaded><component-created><name>RBCodeHighlighting</name> <type>package</type></component-created><parcel-loaded><name>RBCodeHighlighting</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'RBCodeHighlighting.pcl'))</filename></parcel-loaded><component-created><name>AutoComplete</name> <type>package</type></component-created><parcel-loaded><name>AutoComplete</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'AutoComplete.pcl'))</filename></parcel-loaded><component-created><name>ClassCloning</name> <type>package</type></component-created><parcel-loaded><name>ClassCloning</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'ClassCloning.pcl'))</filename></parcel-loaded><component-created><name>BlockIndent</name> <type>package</type></component-created><parcel-loaded><name>BlockIndent</name> <filename>(OS.PortableFilename fromComponents: #('$(VISUALWORKS)' 'contributed' 'BlockIndent.pcl'))</filename></parcel-loaded><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;AppetizerFoodItem #'Main Course'-&gt;MainCourseFoodItem #'Dessert'-&gt;DessertFoodItem)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;LongDrink #'Soda'-&gt;SodaDrink)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;AppetizerFoodItem #'Main Course'-&gt;MainCourseFoodItem #'Dessert'-&gt;DessertFoodItem)		do: [:x | x inspect.child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;LongDrink #'Soda'-&gt;SodaDrink)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;#AppetizerFoodItem #'Main Course'-&gt;#MainCourseFoodItem #Dessert-&gt;#DessertFoodItem)		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink' #-&gt; #LongDrink #Soda #-&gt; #SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;#AppetizerFoodItem #'Main Course'-&gt;#MainCourseFoodItem #Dessert-&gt;#DessertFoodItem)		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	#((#Appetizer-&gt;#AppetizerFoodItem) #'Main Course'-&gt;#MainCourseFoodItem #Dessert-&gt;#DessertFoodItem)		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	#((Association key: #Appetizer value: #AppetizerFoodItem) #'Main Course'-&gt;#MainCourseFoodItem #Dessert-&gt;#DessertFoodItem)		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	#((Association new key: #Appetizer value: #AppetizerFoodItem) (Association new key: #'Main Course' value: #MainCourseFoodItem) (Association new key: #Dessert value: #DessertFoodItem))		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>child</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>child</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child appetizer |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	appetizer := Association new key: #Appetizer value: #AppetizerFoodItem.	#(appetizer (Association new key: #'Main Course' value: #MainCourseFoodItem) (Association new key: #Dessert value: #DessertFoodItem))		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>AppetizerFoodItem</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>AppetizerFoodItem</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child appetizer main |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	appetizer := Association new key: #Appetizer value: #AppetizerFoodItem.	main := Association new key: #'Main Course' value: #MainCourseFoodItem.	#(appetizer main (Association new key: #Dessert value: #DessertFoodItem))		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child appetizer main |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	tree addChild: child.	appetizer := Association new key: #Appetizer value: #AppetizerFoodItem.	main := Association new key: #'Main Course' value: #MainCourseFoodItem.	#(appetizer main (Association new key: #Dessert value: #DessertFoodItem))		do: 			[:x |			x inspect.			child addChild: ((AssociationTreeWithParent new parent: self) key: x						value: x)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;#LongDrink #Soda-&gt;#SodaDrink) do: 			[:x |			child addChild: ((AssociationTreeWithParent new parent: self) key: x key						value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>DessertFoodItem</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>DessertFoodItem</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	tree addChild: child.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer value: #AppetizerFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse value: #MainCourseFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	child addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer value: #AppetizerFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse value: #MainCourseFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	child addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: #AppetizerFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: #MainCourseFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	tree inspect.	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addSibling">addSibling	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 548 122 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 122 548 151 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 180 548 209 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 151 548 180 ) 					#name: #ActionButton4 					#model: #addSibling 					#label: 'AddSibling' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: #AppetizerFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: #MainCourseFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: #AppetizerFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: #MainCourseFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.self inspect.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>tree</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>tree</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: #AppetizerFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: #MainCourseFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.self inspect.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: #AppetizerFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: #MainCourseFoodItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: AssociationTreeWithParent.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.self inspect.	^self</body></methods><class><name>EROSMenuItem</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>name calories price </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="name">name	^name</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="name:">name: anObject	name := anObject</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="calories">calories	^calories</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="calories:">calories: anObject	calories := anObject</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="price">price	^price</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="price:">price: anObject	price := anObject</body></methods><methods><class-id>EROSMenuItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	name := nil.	calories := nil.	price := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSMenuItem class</class-id> <category>instance creation</category><body package="CS474" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><class><name>EROSAppetizerItem</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSAppetizerItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>EROSAppetizerItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>EROSAppetizerItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/VisualWorks Projects/HW2/HW2.im' 'March 15, 2014' '2:08:39 PM')""An image file /home/wcmonty/VisualWorks Projects/HW2/HW2.im was created at 2:08:39 PM on March 15, 2014."</do-it><class><name>EROSMainItem</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients side </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="side">side	^side</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="side:">side: anObject	side := anObject</body></methods><methods><class-id>EROSMainItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	side := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>EROSDessertItem</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSDessertItem</class-id> <category>accessing</category><body package="CS474" selector="description">description	^description</body></methods><methods><class-id>EROSDessertItem</class-id> <category>accessing</category><body package="CS474" selector="description:">description: anObject	description := anObject</body></methods><methods><class-id>EROSDessertItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	description := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>EROSLingDrinkItem</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSLingDrinkItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>EROSLingDrinkItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>EROSLingDrinkItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>parent</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>parent</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			child := (AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: 'Foie Gras' asSymbol.			parent addChild: child.			menu selection value inspect].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			child := (AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: EROSMenuItem new.			parent addChild: ((AssociationTreeWithParent new parent: parent) key: child name asSymbol						value: child).			menu selection value inspect].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			child := EROSMenuItem new.			parent addChild: ((AssociationTreeWithParent new parent: parent) key: child name asSymbol						value: child).			menu selection value inspect].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			child := EROSMenuItem new name: 'Bologna'.			parent addChild: ((AssociationTreeWithParent new parent: parent) key: child name asSymbol						value: child).			menu selection value inspect].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 548 122 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 122 548 151 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 180 548 209 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 151 548 180 ) 					#name: #ActionButton4 					#model: #addSibling 					#label: 'AddSibling' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: EROSAppetizerItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.self inspect.	^self</body></methods><do-it>EROSLingDrinkItem renameTo: #EROSLongDrinkItem</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: EROSAppetizerItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: EROSLongDrinkItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	self inspect.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: EROSAppetizerItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: EROSLongDrinkItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	self inspect.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value notNil])		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			child := EROSMenuItem new name: 'Bologna'.			parent addChild: ((AssociationTreeWithParent new parent: parent) key: child name asSymbol						value: child).			menu selection value inspect].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 548 122 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 122 548 151 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 180 548 209 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 151 548 180 ) 					#name: #ActionButton4 					#model: #addSibling 					#label: 'AddSibling' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value notNil])		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			child := EROSMenuItem new name: 'Bologna'.			parent addChild: ((AssociationTreeWithParent new parent: parent) key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer				value: EROSAppetizerItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert				value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink				value: EROSLongDrinkItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value notNil])		ifTrue: 			[parent := menu selection.			child := EROSMenuItem new name: 'Bologna'.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 548 122 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 122 548 151 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 180 548 209 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 151 548 180 ) 					#name: #ActionButton4 					#model: #addSibling 					#label: 'AddSibling' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value notNil])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'Bologna'.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [menu selection value notNil]) ifTrue: [menu selection parent].	^self</body></methods><do-it>AssociationTreeWithParent</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [menu selection value notNil])		ifTrue: [menu selection parent removeChild: menu selection value].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [menu selection value notNil])		ifTrue: [menu selection parent removeChild: menu selection].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 548 122 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 122 548 151 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 180 548 209 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 151 548 180 ) 					#name: #ActionButton4 					#model: #addSibling 					#label: 'AddSibling' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [menu selection value inspect])		ifTrue: [menu selection parent removeChild: menu selection].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [menu selection value inspect])		ifTrue: [menu selection parent removeChild: menu selection].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [(menu selection value isKindOf: EROSMenuItem) not])		ifTrue: [menu selection parent removeChild: menu selection].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: [menu selection parent removeChild: menu selection].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1014 282 1697 821 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 548 122 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 122 548 151 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 180 548 209 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 151 548 180 ) 					#name: #ActionButton4 					#model: #addSibling 					#label: 'AddSibling' 					#defaultable: true ) ) ) )</body></methods><class><name>Test3</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>Test3 class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1185 315 1868 854 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 576 124 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 140 576 171 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 187 576 218 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			parent				addChild: ((AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: 'Foie Gras' asSymbol).			menu selection value inspect].	^self</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	"This stub method was generated by UIDefiner"	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;AppetizerFoodItem #'Main Course'-&gt;MainCourseFoodItem #'Dessert'-&gt;DessertFoodItem)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;LongDrink #'Soda'-&gt;SodaDrink)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	menu selection notNil ifTrue: [menu selection ].	^self</body></methods><methods><class-id>Test3</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Test3</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Test3</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>Test3 removeFromSystem</do-it><component-created><name>JMG</name> <type>package</type></component-created><class><name>MyCanvas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>myList mySelectionList inputTextField </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>MyCanvas class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'TestList' 			#bounds: #(#{Graphics.Rectangle} 567 337 1138 572 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 100 59 239 186 ) 					#name: #List1 					#model: #mySelectionList 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 291 76 ) 					#name: #Label1 					#label: 'Text goes here' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 302 138 355 158 ) 					#name: #actionbutton1 					#model: #doStuff 					#label: 'Do Stuff' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 295 99 483 126 ) 					#name: #InputField1 					#model: #inputTextField ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 495 103 548 123 ) 					#name: #ActionButton1 					#model: #addElement 					#label: 'Add' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 101 191 234 223 ) 					#name: #ActionButton2 					#model: #removeSelection 					#label: 'Remove Selection' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>MyCanvas</class-id> <category>aspects</category><body package="CS474" selector="inputTextField">inputTextField	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^inputTextField isNil		ifTrue:			[inputTextField := String new asValue]		ifFalse:			[inputTextField]</body></methods><methods><class-id>MyCanvas</class-id> <category>aspects</category><body package="CS474" selector="mySelectionList">mySelectionList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mySelectionList isNil		ifTrue:			[mySelectionList := SelectionInList new]		ifFalse:			[mySelectionList]</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="removeSelection">removeSelection	"This stub method was generated by UIDefiner"	|selection tempList|	selection := mySelectionList selection.	selection = nil ifTrue:[Dialog warn: 'Nothing selected so nothing was removed'. ^self.].	tempList := mySelectionList list.	tempList remove: selection.	mySelectionList list: tempList.		Dialog warn: (selection printString) , ' was removed'.	^self</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="DIALOG">DIALOG| name price caloryCount  dialog|name := '' asValue.price := '' asValue.caloryCount := '' asValue.dialog := (SimpleDialog initializedFor: nil)   setInitialGap.dialog   addMessage: 'Name'    textLine:  name   boundary: 0.4.dialog addGap.dialog   addMessage: 'Price'    textLine: price   boundary: 0.4.dialog addGap.dialog   addMessage: 'Calory Count'    textLine: caloryCount   boundary: 0.4.dialog   addGap;   addOK: [true];   openDialog.name value, price value , caloryCount value.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="addElement">addElement	"This stub method was generated by UIDefiner"	|input list|	input:=inputTextField value.	Dialog warn: inputTextField value ,  ' Added Successfully'.	list := mySelectionList list.	list add: input.	mySelectionList list:list.		^self</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="doStuff">doStuff|list|list := OrderedCollection new.list add: 4.list add: 5.list add: 6.list add: 7.mySelectionList list: (list).^self.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="updateList">updateList| selection |	selection := mySelectionList selection.	selection = nil ifTrue:[^self.].	Dialog warn: (selection printString) , ' was selected'.^self.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="actionButtonClicked">actionButtonClicked	"This stub method was generated by UIDefiner"Dialog warn: 'Gone'.	^self</body></methods><methods><class-id>MyCanvas</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"comment stating purpose of message"	super initialize. 	self mySelectionList selectionIndexHolder onChangeSend: #updateList to: self.      ^self.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="DIALOG">DIALOG	| name price caloryCount dialog |	name := '' asValue.	price := '' asValue.	caloryCount := '' asValue.	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Name' textLine: name boundary: 0.4.	dialog addGap.	dialog addMessage: 'Price' textLine: price boundary: 0.4.	dialog addGap.	dialog addMessage: 'Calory Count' textLine: caloryCount boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.	name value , price value , caloryCount value</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>initialize</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>initialize</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 603 461 1286 1000 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 166 148 194 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 196 148 224 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 43 254 102 284 ) 					#name: #ActionButton6 					#label: 'Action' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="quit">quit	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #white ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 3522 3522 3522 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 3522 3522 3522 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 527 389 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 166 21 410 403 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 32 148 60 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 61 148 89 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 91 148 119 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 276 148 304 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 306 148 334 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 162 148 190 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 192 148 220 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 13 338 148 366 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 167 47 396 392 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 54 152 82 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 183 152 211 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 226 152 254 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 97 152 125 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 140 152 168 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 269 152 297 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 312 152 340 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 17 355 152 383 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 427 47 656 392 ) 					#name: #List1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 174 20 ) 					#name: #Label1 					#label: 'Menu' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 433 20 ) 					#name: #Label2 					#label: 'Item Description' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 593 530 1276 1069 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 4915 4915 4915 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 167 47 396 392 ) 					#name: #HierarchicalList1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 59 149 87 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 179 149 207 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 210 149 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 119 149 147 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 89 149 117 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 269 149 297 ) 					#name: #ActionButton6 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 301 149 329 ) 					#name: #ActionButton7 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 14 355 149 383 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 427 47 656 392 ) 					#name: #List1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 174 20 ) 					#name: #Label1 					#label: 'Menu' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 433 20 ) 					#name: #Label2 					#label: 'Item Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 51 159 160 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 171 159 246 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 259 159 336 ) 					#name: #GroupBox3 ) ) ) )</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>interface</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>interface</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="quit">quit	"Quits the interface"	self quit.	^self</body></methods><component-created><name>JMG</name> <type>package</type></component-created><class><name>MyCanvas</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>myList mySelectionList inputTextField </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>MyCanvas class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'TestList' 			#bounds: #(#{Graphics.Rectangle} 567 337 1138 572 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 100 59 239 186 ) 					#name: #List1 					#model: #mySelectionList 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 291 76 ) 					#name: #Label1 					#label: 'Text goes here' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 302 138 355 158 ) 					#name: #actionbutton1 					#model: #doStuff 					#label: 'Do Stuff' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 295 99 483 126 ) 					#name: #InputField1 					#model: #inputTextField ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 495 103 548 123 ) 					#name: #ActionButton1 					#model: #addElement 					#label: 'Add' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 101 191 234 223 ) 					#name: #ActionButton2 					#model: #removeSelection 					#label: 'Remove Selection' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>MyCanvas</class-id> <category>aspects</category><body package="CS474" selector="inputTextField">inputTextField	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^inputTextField isNil		ifTrue:			[inputTextField := String new asValue]		ifFalse:			[inputTextField]</body></methods><methods><class-id>MyCanvas</class-id> <category>aspects</category><body package="CS474" selector="mySelectionList">mySelectionList	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mySelectionList isNil		ifTrue:			[mySelectionList := SelectionInList new]		ifFalse:			[mySelectionList]</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="removeSelection">removeSelection	"This stub method was generated by UIDefiner"	|selection tempList|	selection := mySelectionList selection.	selection = nil ifTrue:[Dialog warn: 'Nothing selected so nothing was removed'. ^self.].	tempList := mySelectionList list.	tempList remove: selection.	mySelectionList list: tempList.		Dialog warn: (selection printString) , ' was removed'.	^self</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="DIALOG">DIALOG| name price caloryCount  dialog|name := '' asValue.price := '' asValue.caloryCount := '' asValue.dialog := (SimpleDialog initializedFor: nil)   setInitialGap.dialog   addMessage: 'Name'    textLine:  name   boundary: 0.4.dialog addGap.dialog   addMessage: 'Price'    textLine: price   boundary: 0.4.dialog addGap.dialog   addMessage: 'Calory Count'    textLine: caloryCount   boundary: 0.4.dialog   addGap;   addOK: [true];   openDialog.name value, price value , caloryCount value.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="addElement">addElement	"This stub method was generated by UIDefiner"	|input list|	input:=inputTextField value.	Dialog warn: inputTextField value ,  ' Added Successfully'.	list := mySelectionList list.	list add: input.	mySelectionList list:list.		^self</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="doStuff">doStuff|list|list := OrderedCollection new.list add: 4.list add: 5.list add: 6.list add: 7.mySelectionList list: (list).^self.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="updateList">updateList| selection |	selection := mySelectionList selection.	selection = nil ifTrue:[^self.].	Dialog warn: (selection printString) , ' was selected'.^self.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="actionButtonClicked">actionButtonClicked	"This stub method was generated by UIDefiner"Dialog warn: 'Gone'.	^self</body></methods><methods><class-id>MyCanvas</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"comment stating purpose of message"	super initialize. 	self mySelectionList selectionIndexHolder onChangeSend: #updateList to: self.      ^self.</body></methods><class><name>Test3</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>Test3 class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'Unlabeled Canvas' 			#bounds: #(#{Graphics.Rectangle} 1185 315 1868 854 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 43 76 404 444 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 93 576 124 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 140 576 171 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 446 187 576 218 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Item' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent |	menu selection notNil		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			parent				addChild: ((AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: 'Foie Gras' asSymbol).			menu selection value inspect].	^self</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	"This stub method was generated by UIDefiner"	| tree child |	tree := AssociationTreeWithParent new.	tree key: 'Root'.	child := (AssociationTreeWithParent new parent: self) key: #Food value: AssociationTreeWithParent.	tree addChild: child.	#(#Appetizer-&gt;AppetizerFoodItem #'Main Course'-&gt;MainCourseFoodItem #'Dessert'-&gt;DessertFoodItem)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: AssociationTreeWithParent.	#(#'Long Drink'-&gt;LongDrink #'Soda'-&gt;SodaDrink)		do: [:x | child addChild: ((AssociationTreeWithParent new parent: self) key: x key value: x value)].	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>Test3</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	menu selection notNil ifTrue: [menu selection ].	^self</body></methods><methods><class-id>Test3</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Test3</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Test3</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>Test3 removeFromSystem</do-it><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="quit">quit	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 689 564 1372 1103 ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 36 147 135 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 689 564 1372 1103 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 5734 5734 5734 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 36 147 135 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 689 564 1372 1103 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 689 564 1372 1103 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#bounds: #(#{Graphics.Rectangle} 689 564 1372 1103 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 689 564 1255 1005 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 689 564 1255 1005 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 689 564 1255 1005 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 147 340 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 689 564 1255 1005 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="quit">quit	"This stub method was generated by UIDefiner"	self inspect.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>refresh</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>refresh</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizer value: #AppetizerFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #MainCourse value: #MainCourseFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Dessert value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #LongDrink value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	self inspect.	^self</body></methods><class><name>EROSMainDish</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients side </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSMainDish</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>EROSMainDish</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>EROSMainDish</class-id> <category>accessing</category><body package="CS474" selector="side">side	^side</body></methods><methods><class-id>EROSMainDish</class-id> <category>accessing</category><body package="CS474" selector="side:">side: anObject	side := anObject</body></methods><methods><class-id>EROSMainDish</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	side := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><class><name>EROSDesserItem</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSDesserItem</class-id> <category>accessing</category><body package="CS474" selector="description">description	^description</body></methods><methods><class-id>EROSDesserItem</class-id> <category>accessing</category><body package="CS474" selector="description:">description: anObject	description := anObject</body></methods><methods><class-id>EROSDesserItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	description := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><do-it>EROSMainDish renameTo: #EROSMainItem</do-it><class><name>EROSLongDrinkItem</name><environment>Smalltalk</environment><super>EROSMenuItem</super><private>false</private><indexed-type>none</indexed-type><inst-vars>ingredients </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSLongDrinkItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	^ingredients</body></methods><methods><class-id>EROSLongDrinkItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	ingredients := anObject</body></methods><methods><class-id>EROSLongDrinkItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: #AppetizerFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: #MainCourseFoodItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: #DessertFoodItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: #LongDrinkBeverageItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: #SodaBeverageItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	self inspect.	^self</body></methods><do-it>EROSDesserItem renameTo: #EROSDessertItem</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: EROSMainItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: EROSMenuItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	self inspect.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: EROSMainItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: EROSMenuItem).	tree addChild: child.	self menu tree: tree.	dependents refresh.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: EROSMainItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: EROSMenuItem).	tree addChild: child.	self menu tree: tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: EROSMainItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: EROSMenuItem).	tree addChild: child.	self menu tree: tree expanded.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: EROSMainItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: true).	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Main Courses' value: EROSMainItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages value: nil.	child addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks' value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: false).	^self</body></methods><remove-selector><class-id>EROS</class-id> <selector>addSibling</selector></remove-selector><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMainItem])		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			parent				addChild: ((AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: 'Foie Gras' asSymbol).			menu selection value inspect].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 736 568 1302 1009 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[menu selection value class = ByteString				ifTrue: [parent := menu selection]				ifFalse: [parent := menu selection parent].			parent				addChild: ((AssociationTreeWithParent new parent: parent) key: 'Foie Gras'						value: 'Foie Gras' asSymbol).			menu selection value inspect].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>selection</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>selection</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'Bologna'.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 736 568 1302 1009 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 358 34 550 413 ) 					#name: #List1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) ) ) )</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="DIALOG">DIALOG	| name price caloryCount dialog |	name := '' asValue.	price := '' asValue.	caloryCount := '' asValue.	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Name' textLine: name boundary: 0.4.	dialog addGap.	dialog addMessage: 'Price' textLine: price boundary: 0.4.	dialog addGap.	dialog addMessage: 'Calory Count' textLine: caloryCount boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.	name value , price value , caloryCount value</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#tabRequiresControl: true ) ) ) )</body></methods><do-it>EROSMenuItem organization addCategory: #printing</do-it><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>printString</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>printString</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	^self instVarNames asString.</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	^self allInstVarNames asString.</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="updateList">updateList	| selection |	selection := mySelectionList selection.	selection = nil ifTrue: [^self].	Dialog warn: selection printString , ' was selected'.	^self</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="doStuff">doStuff	| list |	list := OrderedCollection new.	list add: 4.	list add: 5.	list add: 6.	list add: 7.	mySelectionList list: list.	^self</body></methods><methods><class-id>MyCanvas</class-id> <category>actions</category><body package="CS474" selector="updateList">updateList	| selection |	"selection := .	selection = nil ifTrue: [^self]."	Dialog warn: mySelectionList selection printString , ' was selected'.	^self</body></methods><do-it>EROS organization addCategory: #'initialize-release'</do-it><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>initialize</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>initialize</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self menu selectionIndexHolder onChangeSend: #updateList to: self.	^ self.</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self menu selectionIndexHolder onChangeSend: #updateList to: self.	^self</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>showDescription</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>showDescription</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	^ self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#tabRequiresControl: true ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu itemDescription </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu  itemDescription '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="itemDescription">itemDescription	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^itemDescription isNil		ifTrue:			[itemDescription := String new asValue]		ifFalse:			[itemDescription]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection.	^ self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem) ifTrue: [].	^ self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem) ifTrue: [].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem) ifTrue: [itemDescription := menu selection printString].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: [itemDescription := menu selection printString].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	^'This is an item''s description'.</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: [itemDescription := menu selection value printString].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: [itemDescription value: menu selection value printString]		ifFalse: [itemDescription value: 'Bologna' ].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 895 608 1461 1049 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: [itemDescription value: menu selection value printString]		ifFalse: [itemDescription value: '' ].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>string</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>string</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := 'This is an item''s description'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := self allInstVarNames printString.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := self class allInstVarNames printString.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString, Character cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString, #cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString, String lineDelimiter].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString, '\n'].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString, '/'].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x printString, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string , x, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string asUppercase , x, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string asUppercase, x, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string, x, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', self send: x, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', instance send: x, ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', (instance send: x), ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', (instance send: x asSymbol), ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', (instance perform: x asSymbol), ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', (instance perform: x), ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := string, x, ' -&gt;', (instance perform: x asSymbol), ''].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames do: [:x | string := instance perform: x asSymbol, ''].	^string</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>allInstVarNames</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>allInstVarNames</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames.	string := self class allInstVarNames at: 1.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| instance string |	string :=  ''.	instance := self.	self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string :=  ''.	"instance := self."	self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| |	"instance := self."	"self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1)."	^self perform: #name</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	"instance := self."	"self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1)."	string := string, self perform: #name.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	"instance := self."	"self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1)."	string := ''.	string := string, self perform: #name.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	"instance := self."	"self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1)."	string := ''.	string := string, (self perform: #name).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	"instance := self."	"self class allInstVarNames.	string := self perform: (self class allInstVarNames at: 1)."	string := ''.	string := string, (self perform: 'name' asSymbol).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	"instance := self."	string := ''.	self class allInstVarNames do: [:x | string := string, (self perform: 'name' asSymbol)].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	"instance := self."	string := ''.	self class allInstVarNames do: [:x | string := string, (self perform: x asSymbol)].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	self class allInstVarNames do: [:x | string := string, (instance perform: x asSymbol)].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	self class allInstVarNames do: [:x | string := string, (instance perform: x)].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	string := string, (instance perform: (self class allInstVarNames at: 1) asSymbol).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	string := string, (instance perform: (self class allInstVarNames at: 2) asSymbol).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	string := string, (instance perform: (self class allInstVarNames at: 3) asSymbol).	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	self class allInstVarNames inspect.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	self class allInstVarNames inspect.	^self class allInstVarNames at: 1.</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	self class allInstVarNames inspect.	^self perform: (self class allInstVarNames at: 1).</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string instance |	instance := self.	string := ''.	self class allInstVarNames inspect.	^self perform: ((self class allInstVarNames at: 1) asSymbol).</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	self class allInstVarNames inspect.	^self perform: ((self class allInstVarNames at: 1) asSymbol).</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>inspect</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>inspect</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	self class allInstVarNames inspect.	index := 1.	[index &lt;= self instSize] whileTrue: [].	^self perform: ((self class allInstVarNames at: 1) asSymbol).</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	self class allInstVarNames inspect.	index := 1.	[index &lt;= self class instSize] whileTrue: [].	^self perform: ((self class allInstVarNames at: 1) asSymbol).</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	self class allInstVarNames inspect.	index := 1.	[index &lt;= self class instSize] whileTrue: [index := index + 1].	^self perform: ((self class allInstVarNames at: 1) asSymbol).</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>index</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>index</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	string := ''.	index := 1.	[index &lt;= self class instSize] whileTrue: [index := index + 1.		].	^self perform: (self class allInstVarNames at: 1) asSymbol</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	string := ''.	index := 1.	[index &lt;= self class instSize] whileTrue: [index := index + 1.		string := string , self perform: (self class allInstVarNames at: index) asSymbol].	^string</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 507 1334 948 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	string := ''.	index := 1.	[index &lt;= self class instSize] whileTrue: [index := index + 1.		string := string , self perform: (self class allInstVarNames at: 1) asSymbol].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string index |	string := ''.	index := 1.	[index &lt;= self class instSize] whileTrue: [index := index + 1.		string := string , (self perform: (self class allInstVarNames at: 1) asSymbol) printString].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , (self perform: x asSymbol) printString].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString].	^string</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 507 1334 948 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, Character cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, String cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, $cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, Character cr printString].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, Character cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, String with: Character cr].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: [ :x |		string := string , x, '-&gt;', (self perform: x asSymbol) printString, (String with: Character cr)].	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	self class allInstVarNames do: 			[:x |			string := string , x , '-&gt;' , (self perform: x asSymbol) printString						, (String with: Character cr)].	^string</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 507 1334 948 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 363 8 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 362 36 551 216 ) 					#name: #TextEditor1 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #itemDescription 					#tabRequiresControl: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'Bologna'; calories: 200; yourself.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'Bologna'; calories: 200; price: 300; yourself.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>new</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>new</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child ingredients |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			ingredients := List new.			ingredients add: 'Saffron'.			child := menu selection value new name: 'Bologna'; calories: 200; price: 300; yourself.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'Bologna'; calories: 200; price: 300; yourself.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'NewItem'; calories: 10000; price: 1000; yourself.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu itemDescription ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu itemDescription  ingredients price calories name side description '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="side">side	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^side isNil		ifTrue:			[side := String new asValue]		ifFalse:			[side]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := 0 asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := 0 asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="name">name	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^name isNil		ifTrue:			[name := String new asValue]		ifFalse:			[name]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredients">ingredients	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredients isNil		ifTrue:			[ingredients := SelectionInList new]		ifFalse:			[ingredients]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1334 788 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	"(menu selection value isKindOf: EROSMenuItem)		ifTrue: [itemDescription value: menu selection value printString]		ifFalse: [itemDescription value: '' ]."	^self</body></methods><remove-selector><class-id>EROS</class-id> <selector>itemDescription</selector></remove-selector><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: [name value: menu selection name]		ifFalse: [name value: '' ].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>calories</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>calories</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: [name value: menu selection name.		calories value: menu selection calories.		price value: menu selection price]		ifFalse: [name value: '' ].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := String new asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := String new asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: 			[menu selection name notNil				ifTrue: [name value: menu selection name]				ifFalse: [name value: ''].			menu selection calories notNil				ifTrue: [calories value: menu selection calories]				ifFalse: [calories value: ''].			price value: menu selection price]		ifFalse: [name value: ''].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>price</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>price</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: 			[menu selection name notNil				ifTrue: [name value: menu selection name]				ifFalse: [name value: ''].			menu selection calories notNil				ifTrue: [calories value: menu selection calories]				ifFalse: [calories value: ''].			menu selection price notNil				ifTrue: [price value: menu selection price]				ifFalse: [price value: '']]		ifFalse: [name value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value isKindOf: EROSMenuItem)		ifTrue: 			[menu selection value name notNil				ifTrue: [name value: menu selection name]				ifFalse: [name value: ''].			menu selection calories notNil				ifTrue: [calories value: menu selection calories]				ifFalse: [calories value: ''].			menu selection price notNil				ifTrue: [price value: menu selection price]				ifFalse: [price value: '']]		ifFalse: [name value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| |	(menu selection value isKindOf: EROSMenuItem)		ifTrue: 			[menu selection value name notNil				ifTrue: [name value: menu selection name]				ifFalse: [name value: ''].			menu selection value calories notNil				ifTrue: [calories value: menu selection calories]				ifFalse: [calories value: ''].			menu selection value price notNil				ifTrue: [price value: menu selection price]				ifFalse: [price value: '']]		ifFalse: [name value: ''].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>value</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>value</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price]				ifFalse: [price value: '']]		ifFalse: [name value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories asString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price asString]				ifFalse: [price value: '']]		ifFalse: [name value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: '']]		ifFalse: [name value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: '']].			((value respondsTo: side) and: [value side] ) ifTrue: []		ifFalse: [name value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: '']].			((value respondsTo: side) and: [value side] ) ifTrue: []		ifFalse: [name value: ''. calories value: ''. price value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: '']].	((value respondsTo: side) and: [value side])		ifTrue: []		ifFalse: 			[name value: ''.			calories value: ''.			price value: ''].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			((value respondsTo: side) and: [value side notNil]) ifTrue: []].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 768 347 1450 780 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side) ifTrue: []].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ifTrue</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ifTrue</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side) ifTrue: []	ifFalse: []].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side) ifTrue: []	ifFalse: [(self wrapperAt: #sideField) disable]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side) ifTrue: []	ifFalse: [(self wrapperAt: #sideField) disable. (self wrapperAt: #sideField) beInvisible]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side)				ifTrue: []				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>enable</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>enable</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side)				ifTrue: [(self wrapperAt: #sideField) enable.						 (self wrapperAt: #sideField) beVisible.]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side)				ifTrue: 					[(self wrapperAt: #sideField) enable.					(self wrapperAt: #sideField) beVisible]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side)				ifTrue: 					[(self wrapperAt: #sideField) beVisible.					(self wrapperAt: #sideField) enable]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>side</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>side</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: side)				ifTrue: 					[wrapper := self wrapperAt: #sideField.					wrapper beVisible.					wrapper enable]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><do-it>| a |a := EROSMainItem new.a respondsTo: #side.</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: #side)				ifTrue: 					[wrapper := self wrapperAt: #sideField.					wrapper beVisible.					wrapper enable]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			value price notNil				ifTrue: [price value: value price printString]				ifFalse: [price value: ''].			(value respondsTo: #side)				ifTrue: 					[wrapper := self wrapperAt: #sideField.					wrapper beVisible.					wrapper enable.					value side not]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			price value: value price printString.			(value respondsTo: #side)				ifTrue: 					[wrapper := self wrapperAt: #sideField.					wrapper beVisible.					wrapper enable.					value side not]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[value name notNil				ifTrue: [name value: value name]				ifFalse: [name value: ''].			value calories notNil				ifTrue: [calories value: value calories printString]				ifFalse: [calories value: ''].			price value: value price printString.			(value respondsTo: #side)				ifTrue: 					[wrapper := self wrapperAt: #sideField.					wrapper beVisible.					wrapper enable.					side value: value side]				ifFalse: 					[(self wrapperAt: #sideField) disable.					(self wrapperAt: #sideField) beInvisible]].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>beInvisible</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>beInvisible</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name , calories value: value calories printString.			price value: value price printString.			wrapper := self wrapperAt: #sideField.			(value respondsTo: #side)				ifTrue: 					[wrapper beVisible.					side value: value side]				ifFalse: 					[wrapper beInvisible.					side value: nil]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			wrapper := self wrapperAt: #sideField.			(value respondsTo: #side)				ifTrue: 					[wrapper beVisible.					side value: value side]				ifFalse: 					[wrapper beInvisible.					side value: nil]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper method |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			method := #side.			wrapper := self wrapperAt: #side, #Field.			(value respondsTo: #side)				ifTrue: 					[wrapper beVisible.					side value: value side]				ifFalse: 					[wrapper beInvisible.					side value: nil]	].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper method |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			method := #side.			wrapper := self wrapperAt: (#side, #Field).			(value respondsTo: #side)				ifTrue: 					[wrapper beVisible.					side value: value side]				ifFalse: 					[wrapper beInvisible.					side value: nil]	].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper method |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			method := #side.			wrapper := self wrapperAt: (#side, #Field) asSymbol.			(value respondsTo: #side)				ifTrue: 					[wrapper beVisible.					side value: value side]				ifFalse: 					[wrapper beInvisible.					side value: nil]	].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value wrapper method |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			method := #side.			wrapper := self wrapperAt: (#side, #Field) asSymbol.			(value respondsTo: method)				ifTrue: 					[wrapper beVisible.					side value: value side]				ifFalse: 					[wrapper beInvisible.					side value: nil]	].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (#side , #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			side value: value side]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value method |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			method := #side.			self set: value withMethod: method].	^self</body></methods><do-it>EROS organization addCategory: #private</do-it><do-it>EROS organization addCategory: #private</do-it><do-it>EROS classifySymbol: #set:withMethod: under: #private</do-it><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			side value: value side]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[name value: value name.			calories value: value calories printString.			price value: value price printString.			self set: value withMethod: #side].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	(value isKindOf: EROSMenuItem)		ifFalse: 			[name value: ''.			calories value: ''.			price value: '']		ifTrue: 			[self set: value withMethod: #name.			calories value: value calories printString.			price value: value price printString.			self set: value withMethod: #side].	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			side value: value method]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			side value: (value method)]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			side value: (value perform: method)]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			self side value: (value perform: method)]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (value perform: method)]		ifFalse: 			[wrapper beInvisible.			side value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method, #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (value perform: method)]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method , #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (value perform: method)]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method , #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (value perform: method) printString]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	self set: value withMethod: #name.	calories value: value calories printString.	price value: value price printString.	self set: value withMethod: #side.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	self set: value withMethod: #name.	self set: value withMethod:  #calories.	self set: value withMethod: #price.	self set: value withMethod: #side.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	self set: value withMethod: #name.	self set: value withMethod:  #calories.	self set: value withMethod: #price.	self set: value withMethod: #side.	self set: value withMethod: #description.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>description</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>description</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	self set: value withMethod: #name.	self set: value withMethod:  #calories.	self set: value withMethod: #price.	self set: value withMethod: #side.	self set: value withMethod: #description.	self set: value withMethod: #ingredients.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:withMethod:">set: value withMethod: method	| wrapper |	wrapper := self wrapperAt: (method , #Field) asSymbol.	(value respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (value perform: method) printString]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:to:from:">set: method to: value from: menuSelectionValue	| wrapper |	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: value]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><remove-selector><class-id>EROS</class-id> <selector>set:withMethod:</selector></remove-selector><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	| value |	value := menu selection value.	self set: #name to: value withMethod: #name.	self set: value withMethod:  #calories.	self set: value withMethod: #price.	self set: value withMethod: #side.	self set: value withMethod: #description.	self set: value withMethod: #ingredients.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription"set: method to: value from: menuSelectionValue"	| value |	value := menu selection value.	self set: #name to: value withMethod: #name.	self set: value withMethod:  #calories.	self set: value withMethod: #price.	self set: value withMethod: #side.	self set: value withMethod: #description.	self set: value withMethod: #ingredients.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>wrapper</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>wrapper</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:to:">set: method to: value	| wrapper menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: value]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><remove-selector><class-id>EROS</class-id> <selector>set:to:from:</selector></remove-selector><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>menuSelectionValue</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>menuSelectionValue</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription"set: method to: value from: menuSelectionValue"	| |	menu selection value.	self set: #name to: 'bow'.	self set: #calories to: 'bow'.	self set: #price to: 'bow'.	self set: #side to: 'bow'.	self set: #description to: 'bow'.	self set: #ingredients to: 'bow'.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription"set: method to: value from: menuSelectionValue"		self set: #name to: 'bow'.	self set: #calories to: 'bow'.	self set: #price to: 'bow'.	self set: #side to: 'bow'.	self set: #description to: 'bow'.	self set: #ingredients to: 'bow'.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription"set: method to: value from: menuSelectionValue"		self set: #name to: 'bow'.	self set: #calories to: 'bow'.	self set: #price to: 'bow'.	self set: #side to: 'bow'.	self set: #description to: 'bow'.	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value 	self set: #name to: 'bow'.	self set: #calories to: 'bow'.	self set: #price to: 'bow'.	self set: #side to: 'bow'.	self set: #description to: 'bow'.	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value.	self set: #name to: 'bow'.	self set: #calories to: 'bow'.	self set: #price to: 'bow'.	self set: #side to: 'bow'.	self set: #description to: 'bow'.	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem]		ifTrue: 			[self set: #name to: 'bow'.			self set: #calories to: 'bow'.			self set: #price to: 'bow'.			self set: #side to: 'bow'.			self set: #description to: 'bow'].	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[self set: #name to: 'bow'.			self set: #calories to: 'bow'.			self set: #price to: 'bow'.			self set: #side to: 'bow'.			self set: #description to: 'bow'].	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:to:">set: method to: value	| wrapper menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (menuSelectionValue perform: method)]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:to:">set: method to: value	| wrapper menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (menuSelectionValue perform: method)]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[self set: #name.			self set: #calories to: 'bow'.			self set: #price to: 'bow'.			self set: #side to: 'bow'.			self set: #description to: 'bow'].	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (menuSelectionValue perform: method)]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><remove-selector><class-id>EROS</class-id> <selector>set:to:</selector></remove-selector><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[self set: #name.			self set: #calorie.			self set: #price.			self set: #side.			self set: #description].	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[self set: #name.			self set: #calories.			self set: #price.			self set: #side.			self set: #description].	"self set: #ingredients to: 'bow'."	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (menuSelectionValue perform: method) printString]		ifFalse: 			[wrapper beInvisible.			(self perform: method) value: nil]</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem])			ifTrue: 				[self set: #name.				self set: #calories.				self set: #price.				self set: #side.				self set: #description.				self set: #ingredients].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #Label3 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #Label4 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #Label5 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #Label6 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #Label7 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #Label8 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	(menu selection value notNil		and: [menu selection value isKindOf: EROSMenuItem])			ifTrue: 				[self set: #name.				self set: #calories.				self set: #price.				self set: #side.				self set: #description].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description]			ifFalse: [self disableFields]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description]				ifFalse: [self disableFields]].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>asSymbol</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>asSymbol</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible.			(self perform: method) value: nil].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible.			(self perform: method) value: nil].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible].	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[wrapper beVisible.			(self perform: method) value: (menuSelectionValue perform: method) printString]		ifFalse: 			[wrapper beInvisible]</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>disableFields</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>disableFields</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description]				ifFalse: [self disableFields]]		ifFalse: [self disableFields].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #descriptionLabel 					#label: 'Description' ) ) ) )</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ifFalse</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ifFalse</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label beVisible.			wrapper beVisible.			(self perform: method)				value: (menuSelectionValue perform: method) printString]		ifFalse: 			[label beInvisible.			wrapper beInvisible]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #descriptionLabel 					#label: 'Description' ) ) ) )</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>method</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>method</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label beVisible.			wrapper beVisible.			value := menuSelectionValue perform: method.			value isNumber				ifTrue: [(self perform: method) value: value printString]				ifFalse: [(self perform: method) value: value]]		ifFalse: 			[label beInvisible.			wrapper beInvisible]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #descriptionLabel 					#label: 'Description' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label beVisible.			wrapper beVisible.			value := menuSelectionValue perform: method.			(value isKindOf: Magnitude)				ifTrue: [(self perform: method) value: value printString]				ifFalse: [(self perform: method) value: value]]		ifFalse: 			[label beInvisible.			wrapper beInvisible]</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1696 776 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	selection notNil		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: [:x | ]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients)				do: [:x | selection value perform: (x , ':') asSymbol with: (self perform: x)]].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>x</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>x</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]]].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 71 660 98 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 40 660 67 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 101 660 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 396 46 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 401 74 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 385 104 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 380 134 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 368 291 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 369 168 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#flags: 40 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := String new asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="name">name	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^name isNil		ifTrue:			[name := String new asValue]		ifFalse:			[name]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := String new asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="side">side	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^side isNil		ifTrue:			[side := String new asValue]		ifFalse:			[side]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredients">ingredients	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredients isNil		ifTrue:			[ingredients := SelectionInList new]		ifFalse:			[ingredients]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			selection key: selection value name asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			menu selection value inspect.			selection key: selection value name asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	selection value inspect.	(selection notNil and: [selection isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			menu selection value inspect.			selection key: selection value name asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	selection value inspect.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			menu selection value inspect.			selection key: selection value name asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	selection value inspect.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			menu selection value inspect.			selection key: selection value name value asSymbol].	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/VisualWorks Projects/HW2/HW2.im' 'March 15, 2014' '9:22:49 PM')""An image file /home/wcmonty/VisualWorks Projects/HW2/HW2.im was created at 9:22:49 PM on March 15, 2014."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 15, 2014' '9:23:10 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 9:23:10 PM on March 15, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	selection value inspect.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			menu selection value inspect.			selection key: selection value name].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			selection key: selection value name].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			selection key: selection value name asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			selection value name inspect.			selection key: selection value name asSymbol].	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := String new asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="name">name	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^name isNil		ifTrue:			[name := String new asValue]		ifFalse:			[name]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := String new asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="side">side	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^side isNil		ifTrue:			[side := String new asValue]		ifFalse:			[side]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredients">ingredients	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredients isNil		ifTrue:			[ingredients := SelectionInList new]		ifFalse:			[ingredients]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x)]].			selection value name inspect.			selection key: selection value name value asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x) value]].			selection value name inspect.			selection key: selection value name value asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection |	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (self perform: x) value]].			selection value name inspect.			selection key: selection value name asSymbol].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>this</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>this</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description #ingredients) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: [selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection value name inspect.			selection key: selection value name asSymbol].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection value name inspect.			selection key: selection value name asSymbol].	"todo set up ingredients"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible.			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper beInvisible].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 352 6 ) 					#name: #Label2 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible.			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper beInvisible].	(self wrapperAt: #itemDescriptionLabel) beInvisible.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication true ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: #'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 343 1697 799 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #HierarchicalList1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	menu := menu.	"todo set up ingredients"	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child widget |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: false).	widget := (self builder componentAt: #menuList) widget.	widget invalidate.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 176 144 206 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 208 144 238 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 170 147 242 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 488 418 622 448 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget |	widget := (self builder componentAt: #menuList) widget.	widget invalidate</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: false).	self redrawMenu.	^self</body></methods><do-it>EROS organization addCategory: #private</do-it><do-it>EROS classifySymbol: #redrawMenu under: #private</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new name: 'NewItem'; calories: 10000; price: 1000; yourself.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	self redrawMenu.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>widget</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>widget</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget |	widget := (self builder componentAt: #menuList) widget.	widget inspect.	widget invalidate</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ingredients</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>ingredients</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	menu := menu.	"todo set up ingredients"	self redrawMenu.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	self redrawMenu.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget |	widget := (self builder componentAt: #menuList) widget.	widget invalidate</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 368 144 398 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 433 289 667.5 415 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 73 658 100 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 42 658 69 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 103 658 130 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 433 132 660 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 432 291 666.5 417 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 366 293 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 433 169 667.5 284 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 447 420 541 450 ) 					#name: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 547 418 665 449 ) 					#name: #removeIngredient 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 157 425 429 445 ) 					#name: #InputField1 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description  ingredientInput '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="removeIngredient">removeIngredient	"This stub method was generated by UIDefiner"	^self</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredientInput">ingredientInput	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredientInput isNil		ifTrue:			[ingredientInput := String new asValue]		ifFalse:			[ingredientInput]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 15, 2014' '10:17:04 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 10:17:04 PM on March 15, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="quit">quit	"This stub method was generated by UIDefiner"	self closeRequest.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description.					(self wrapperAt: #itemDescriptionLabel) beInvisible]				ifFalse: [self disableFields]]		ifFalse: [self disableFields].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description.					(self wrapperAt: #itemDescriptionLabel) beVisible]				ifFalse: [self disableFields]]		ifFalse: [self disableFields].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>menu</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>menu</staticKey> <definitionChange>added</definitionChange></component_static_change><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>redrawMenu</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>redrawMenu</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this temp |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	temp := menu.	menu := nil.	self redrawMenu.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>temp</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>temp</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this temp |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	temp := menu.	menu := nil.	self redrawMenu.	menu := temp.	self redrawMenu.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	self redrawMenu.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget temp |	widget := (self builder componentAt: #menuList) widget.	temp := menu.	menu := nil.	widget invalidate.	menu := temp.	widget invalidate</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: true).	self redrawMenu.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	child expanded: true.	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: true).	self redrawMenu.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#flags: 16 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper beInvisible.			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper beInvisible].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	self createNewList.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label beVisible.			wrapper beVisible.			value := menuSelectionValue perform: method.			(value isKindOf: Magnitude)				ifTrue: [(self perform: method) value: value printString]				ifFalse: [(self perform: method) value: value]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			(value isKindOf: Magnitude)				ifTrue: [(self perform: method) value: value printString]				ifFalse: [(self perform: method) value: value]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><do-it>EROS organization addCategory: #private</do-it><do-it>EROS classifySymbol: #disableFields under: #private</do-it><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible].			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible]].	^self</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget temp |	self builder notNil		ifTrue: 			[widget := (self builder componentAt: #menuList) widget.			temp := menu.			menu := nil.			widget invalidate.			menu := temp.			widget invalidate]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1015 342 1698 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget temp |	menu.	self builder notNil		ifTrue: 			[widget := (self builder componentAt: #menuList) widget.			temp := menu.			menu := nil.			widget invalidate.			menu := temp.			widget invalidate]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget temp |	menu rebuildIndentedList.	self builder notNil		ifTrue: 			[widget := (self builder componentAt: #menuList) widget.			temp := menu.			menu := nil.			widget invalidate.			menu := temp.			widget invalidate]</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 16, 2014' '10:35:16 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 10:35:16 PM on March 16, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description]				ifFalse: [self disableFields]]		ifFalse: [self disableFields].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 342 1697 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			method = #ingredients				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1014 342 1697 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	wrapper := self wrapperAt: (method , #Field) asSymbol.	label := self wrapperAt: (method , #Label) asSymbol.	label notNil ifTrue: [label beVisible].	wrapper notNil ifTrue: [wrapper beVisible].	(menuSelectionValue respondsTo: method)		ifTrue: 			[value := menuSelectionValue perform: method.			method = #ingredients				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>beVisible</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>beVisible</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.		"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	label notNil ifTrue: [label beVisible].		"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	wrapper notNil ifTrue: [wrapper beVisible].	(menuSelectionValue respondsTo: method)		ifTrue: 			[value := menuSelectionValue perform: method.			method = #ingredients				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			method = #ingredients				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description.					self set: #ingredients]				ifFalse: [self disableFields]]		ifFalse: [self disableFields].	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			method = #ingredients				ifTrue: []				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: []				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROSMenuItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	name := 'New Item'.	calories := 10000.	price := 10.00.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSMenuItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	name := 'New Item'.	calories := 10000.	price := 1000.00.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSMainItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := OrderedCollection new.	side := ''.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSLongDrinkItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := OrderedCollection new.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSDessertItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	description := ''.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSAppetizerItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	ingredients := OrderedCollection new.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1013 342 1696 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: [(self wrapperAt: #ingredientInputField) beVisible.]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value]]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible].			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible]].	(self wrapperAt: #ingredientInputField) beInvisible.	(self wrapperAt: #addIngredient) beInvisible.	(self wrapperAt: #removeIngredient) beInvisible.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="hideIngredientsInput">hideIngredientsInput	(self wrapperAt: #ingredientInputField) beInvisible.	(self wrapperAt: #addIngredient) beInvisible.	(self wrapperAt: #removeIngredient) beInvisible</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible].			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible]].	self hideIngredientsInput.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					ingredients value: value ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					ingredients value: value ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					ingredients value: menuSelectionValue ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					menuSelectionValue inspect.					ingredients value: menuSelectionValue ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					menuSelectionValue inspect.					ingredients list: menuSelectionValue ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					"menuSelectionValue inspect."					ingredients list: menuSelectionValue ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value printString]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"		^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"	ingredients list add: 'Steak'.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawIngredients">redrawIngredients	| widget |	widget := (self builder componentAt: #ingredientsField) widget.	widget invalidate</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawIngredients">redrawIngredients	| widget |	ingredients rebuild.	widget := (self builder componentAt: #ingredientsField) widget.	widget invalidate</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"	ingredients list add: 'Steak'.	self redrawIngredients.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawIngredients">redrawIngredients	| widget |	widget := (self builder componentAt: #ingredientsField) widget.	widget invalidate</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"	ingredients list add: (ingredientInput value).	self redrawIngredients.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"	ingredientInput value notNil		ifTrue: [ingredients list add: ingredientInput value].	self redrawIngredients.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"This stub method was generated by UIDefiner"	ingredientInput value notEmpty		ifTrue: [ingredients list add: ingredientInput value].	self redrawIngredients.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="removeIngredient">removeIngredient	"This stub method was generated by UIDefiner"		^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="removeIngredient">removeIngredient	"This stub method was generated by UIDefiner"	ingredients selection notNil		ifTrue: [ingredients remove: ingredients selection].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="removeIngredient">removeIngredient	"This stub method was generated by UIDefiner"	ingredients selection notNil		ifTrue: [ingredients list remove: ingredients selection].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="removeIngredient">removeIngredient	"This stub method was generated by UIDefiner"	ingredients selection notNil		ifTrue: 			[ingredients list remove: ingredients selection.			self redrawIngredients].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: nil].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	self redrawMenu.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: nil.			self redrawMenu].	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 17, 2014' '10:28:50 AM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 10:28:50 AM on March 17, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| original retrieved hello inStream outStream |	hello := 'hello'.	original := Array with: hello with: hello.	outStream := 'data.bos' asFilename writeStream binary.	original storeBinaryOn: outStream.	outStream close.	inStream := 'data.bos' asFilename readStream binary.	retrieved := Object readBinaryFrom: inStream.	inStream close.	Transcript showCR: (original at: 1) == (original at: 2).	"evaluates to true"	Transcript showCR: (retrieved at: 1) == (retrieved at: 2).	"evaluates to true"	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 17, 2014' '12:44:12 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 12:44:12 PM on March 17, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outStream outBOS |	outStream := (Filename named: 'foobar.st') writeStream.	outBOS := BinaryObjectStorage onNew: outStream.	outBOS nextPut: menu.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inStream inBOS |	inStream := (Filename named: 'foobar.st') readStream.	inBOS := BinaryObjectStorage onOld: inStream.	menu := inBOS next.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outStream outBOS |	outStream := (Filename named: 'foobar.st') writeStream.	outBOS := BinaryObjectStorage onNew: outStream.	outBOS nextPut: menu.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outStream outBOS |	outStream := (Filename named: 'foobar.st') writeStream.	outBOS := BinaryObjectStorage onNew: outStream.	outBOS nextPut: menu tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inStream inBOS |	inStream := (Filename named: 'foobar.st') readStream.	inBOS := BinaryObjectStorage onOld: inStream.	menu list: inBOS next.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS |	outBOS := BinaryObjectStorage onNew: (Filename named: 'foobar.st') writeStream.	outBOS nextPut: menu tree.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS |	inBOS := BinaryObjectStorage onOld: (Filename named: 'foobar.st') readStream.	menu list: inBOS next.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS |	outBOS := BinaryObjectStorage onNew: (Filename named: 'foobar.st') writeStream.	outBOS nextPut: menu tree.	outBOS close.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS |	inBOS := BinaryObjectStorage onOld: (Filename named: 'foobar.st') readStream.	menu tree: inBOS next.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>outBOS</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>outBOS</staticKey> <definitionChange>added</definitionChange></component_static_change><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>dialog</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>dialog</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog |	dialog := SaveFileDialog new.	outBOS := BinaryObjectStorage onNew: (Filename named: 'foobar.st') writeStream.	outBOS nextPut: menu tree.	outBOS close.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'settings.xml';		addFileFilter: 'XML file (*.xml)' pattern: '*.xml';		addFilterForAllFiles.	dialog select.	outBOS := BinaryObjectStorage				onNew: (Filename named: 'foobar.st') writeStream.	outBOS nextPut: menu tree.	outBOS close.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'menu..st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	dialog select.	outBOS := BinaryObjectStorage				onNew: (Filename named: 'foobar.st') writeStream.	outBOS nextPut: menu tree.	outBOS close.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	| widget temp |	menu rebuildIndentedList.	"self builder notNil		ifTrue: 			[widget := (self builder componentAt: #menuList) widget.			temp := menu.			menu := nil.			widget invalidate.			menu := temp.			widget invalidate]"</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	menu rebuildIndentedList.	"self builder notNil		ifTrue: 			[widget := (self builder componentAt: #menuList) widget.			temp := menu.			menu := nil.			widget invalidate.			menu := temp.			widget invalidate]"</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	menu rebuildIndentedList.</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>select</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>select</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'menu..st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notEmpty		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: 'foobar.st') writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'menu..st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select asString.	filename notEmpty		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: 'foobar.st') writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'menu..st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select asString.	filename notEmpty		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: filename) writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: filename asString) writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Import Settings';		acceptButtonLabel: 'Import';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: filename asString) writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"This stub method was generated by UIDefiner"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Save Menu';		acceptButtonLabel: 'Save';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: filename asString) writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Save Menu';		acceptButtonLabel: 'Save';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	inBOS := BinaryObjectStorage				onOld: (Filename named: 'foobar.st') readStream.	menu tree: inBOS next.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>readStream</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>readStream</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS dialog filename tree |	dialog := OpenFileDialog new.	dialog		windowTitle: 'Open Menu';		acceptButtonLabel: 'Open';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[inBOS := BinaryObjectStorage						onOld: (Filename named: filename asString) readStream.			tree := inBOS next.			menu tree: tree].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS dialog filename tree |	dialog := OpenFileDialog new.	dialog		windowTitle: 'Open Menu';		acceptButtonLabel: 'Open';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[inBOS := BinaryObjectStorage						onOld: (Filename named: filename asString) readStream.			tree := inBOS next.			tree inspect.			menu tree: tree].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS dialog filename tree |	dialog := OpenFileDialog new.	dialog		windowTitle: 'Open Menu';		acceptButtonLabel: 'Open';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[inBOS := BinaryObjectStorage						onOld: (Filename named: filename asString) readStream.			tree := inBOS next.			tree inspect.			(tree isKindOf: Class) ifTrue: [menu tree: tree]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS dialog filename tree |	dialog := OpenFileDialog new.	dialog		windowTitle: 'Open Menu';		acceptButtonLabel: 'Open';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[inBOS := BinaryObjectStorage						onOld: (Filename named: filename asString) readStream.			tree := inBOS next.			tree inspect.			(tree isKindOf: AssociationTree) ifTrue: [menu tree: tree]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"This stub method was generated by UIDefiner"	| inBOS dialog filename tree |	dialog := OpenFileDialog new.	dialog		windowTitle: 'Open Menu';		acceptButtonLabel: 'Open';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[inBOS := BinaryObjectStorage						onOld: (Filename named: filename asString) readStream.			tree := inBOS next.			(tree isKindOf: AssociationTree) ifTrue: [menu tree: tree]].	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 18, 2014' '1:16:46 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 1:16:46 PM on March 18, 2014."</do-it><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1013 342 1696 798 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 154 34 346 413 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 266 144 296 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 300 144 330 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 364 144 394 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 260 148 337 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput  mealPrice mealCalories '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealPrice">mealPrice	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealPrice isNil		ifTrue:			[mealPrice := String new asValue]		ifFalse:			[mealPrice]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealCalories">mealCalories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealCalories isNil		ifTrue:			[mealCalories := String new asValue]		ifFalse:			[mealCalories]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1051 426 1734 882 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 155 34 346 343 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 42 144 72 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 146 144 176 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 174 144 204 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 71 144 101 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 101 144 131 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 255 144 285 ) 					#name: #ActionButton8 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 38 147 137 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 6 144 147 241 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 353 343 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 10 202 144 232 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1051 426 1734 882 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 155 34 346 343 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 90 146 120 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 194 146 224 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 222 146 252 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 119 146 149 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 149 146 179 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 279 460 413 490 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 86 149 185 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 192 149 289 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 353 343 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 250 146 280 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1051 426 1734 925 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 155 34 346 343 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 90 146 120 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 194 146 224 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 222 146 252 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 119 146 149 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 149 146 179 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 279 460 413 490 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 86 149 185 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 192 149 289 ) 					#name: #GroupBox2 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 8 353 343 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 70 658 97 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 39 658 66 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 101 658 128 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 431 132 658 159 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 431 239 658 365 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 352 6 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 394 48 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 76 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 106 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 378 136 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 362 240 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 431 169 658 231 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 367 170 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 12 250 146 280 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 414 418 508 448 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 532 416 650 447 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 392 395 664 415 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 386 670 447 ) 					#name: #GroupBox4 ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 355 32 670 377 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1534 925 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 23 42 358 304 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 38 307 130 340 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 194 496 222 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 222 496 250 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 143 307 235 340 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 248 307 340 340 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 367 462 501 492 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 68 816 95 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 37 816 64 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 99 816 126 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 130 816 157 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 589 237 816 363 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 610 5 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 552 46 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 557 74 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 541 104 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 536 134 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 520 238 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 589 167 816 229 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 525 168 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 250 496 278 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 572 416 666 446 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 690 414 808 445 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 550 393 822 413 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 512 32 825 449 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1695 936 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 23 42 358 304 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 38 307 130 340 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 194 496 222 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 222 496 250 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 143 307 235 340 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 248 307 340 340 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 367 462 501 492 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 68 816 95 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 37 816 64 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 99 816 126 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 130 816 157 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 589 237 816 363 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 610 5 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 552 46 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 557 74 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 541 104 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 536 134 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 520 238 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 589 167 816 229 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 525 168 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 250 496 278 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 572 416 666 446 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 690 414 808 445 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 550 393 822 413 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 512 32 825 449 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="disableFields">disableFields	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[ :method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible].			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible]].	self hideIngredientsInput.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1695 936 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 23 42 358 304 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 38 307 130 340 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 194 496 222 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 222 496 250 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 143 307 235 340 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 248 307 340 340 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 367 462 501 492 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 68 816 95 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 37 816 64 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 99 816 126 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 130 816 157 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 589 237 816 363 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 610 5 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 552 46 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 557 74 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 541 104 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 536 134 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 520 238 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 589 167 816 229 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 525 168 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 250 496 278 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 572 416 666 446 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 690 414 808 445 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 550 393 822 413 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 512 32 825 449 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := String new asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="side">side	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^side isNil		ifTrue:			[side := String new asValue]		ifFalse:			[side]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := String new asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1695 936 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 23 42 358 304 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 38 307 130 340 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 194 496 222 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 222 496 250 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 143 307 235 340 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 248 307 340 340 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 367 462 501 492 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 68 816 95 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 37 816 64 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 99 816 126 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 589 130 816 157 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 589 237 816 363 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 610 5 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 552 46 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 557 74 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 541 104 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 536 134 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 520 238 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 589 167 816 229 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 525 168 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 381 250 496 278 ) 					#name: #updateButton 					#model: #updateItem 					#label: 'Update Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 572 416 666 446 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 690 414 808 445 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 550 393 822 413 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 512 32 825 449 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 251 454 385 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabRequiresControl: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: true 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: true 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value isKindOf: Class])		ifTrue: 			[parent := menu selection.			child := menu selection value new.			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	self redrawMenu.	menu selection: child.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: parent.			self redrawMenu].		^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selectionIndex: parent].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selectionIndex: menu selectionIndex - 1].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: parent.			self redrawMenu].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: parent.			self redrawMenu.			menu selection: parent].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: parent.			self redrawMenu.			menu selection: parent value].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			menu selection: parent value.			self redrawMenu].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent value].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"This stub method was generated by UIDefiner"	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	self redrawMenu.	menu selection: selection value.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[(menu selection value isKindOf: Class)				ifTrue: 					[parent := menu selection.					child := menu selection value new.					parent addChild: ((AssociationTreeWithParent new parent: parent)								key: child name asSymbol								value: child)]].	self redrawMenu.	menu selection: child.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[(menu selection value isKindOf: Class)				ifTrue: 					[parent := menu selection.					child := menu selection value new.					parent addChild: ((AssociationTreeWithParent new parent: parent)								key: child name asSymbol								value: child)]				ifFalse: 					[parent := menu selection parent.					child := menu selection value new.					parent addChild: ((AssociationTreeWithParent new parent: parent)								key: child name asSymbol								value: child)]].	self redrawMenu.	menu selection: child.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[(menu selection value isKindOf: Class)				ifTrue: 					[parent := menu selection.					child := menu selection value new.					parent addChild: ((AssociationTreeWithParent new parent: parent)								key: child name asSymbol								value: child)]				ifFalse: 					[parent := menu selection parent.					child := parent value new.					parent addChild: ((AssociationTreeWithParent new parent: parent)								key: child name asSymbol								value: child)]].	self redrawMenu.	menu selection: child.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	menu selection notNil		ifTrue: 			[(menu selection value isKindOf: Class)				ifTrue: 					[parent := menu selection.					child := menu selection value new]				ifFalse: 					[parent := menu selection parent.					child := parent value new].			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	self redrawMenu.	menu selection: child.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"This stub method was generated by UIDefiner"	| parent child |	(menu selection notNil and: [menu selection value notNil])		ifTrue: 			[(menu selection value isKindOf: Class)				ifTrue: 					[parent := menu selection.					child := menu selection value new]				ifFalse: 					[parent := menu selection parent.					child := parent value new].			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	self redrawMenu.	menu selection: child.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selectionIndex: menu selectionIndex - 1].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent value].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent children last].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"This stub method was generated by UIDefiner"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent value].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"		^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 18, 2014' '3:15:24 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 3:15:24 PM on March 18, 2014."</do-it><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>anObject</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>anObject</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="price:">price: anObject		price := anObject asNumber</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	menu inspect.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Appetizers</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Appetizers</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| temp |	menu inspect.	temp  := menu tree find: #Appetizers.	temp inspect.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| temp |	temp  := menu tree find: #Appetizers.	temp inspect.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| temp |	temp  := menu tree find: #Appetizers.	temp inspect.	temp childrenDo: [ :child | child inspect.].	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 18, 2014' '9:25:55 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 9:25:55 PM on March 18, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| temp |	(menu tree find: #Appetizers)		childrenDo: [:child | menu tree find: #'Main Courses'].	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 18, 2014' '9:59:36 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 9:59:36 PM on March 18, 2014."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 18, 2014' '10:00:09 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 10:00:09 PM on March 18, 2014."</do-it><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Courses</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Courses</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name , dessert name , soda name]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name , String cr,  dessert name , soda name]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name ,  dessert name , soda name]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showSuggestionDialog">showSuggestionDialog	| nameX priceX caloryCount dialog |	nameX := '' asValue.	priceX := '' asValue.	caloryCount := '' asValue.	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Name' textLine: nameX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Price' textLine: priceX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Calory Count' textLine: caloryCount boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.	name value , price value , caloryCount value</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name ,  dessert name , soda name.						self showDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name ,  dessert name , soda name.						self showSuggestionDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name , dessert name , soda name.							self showSuggestionDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showLightDialog">showLightDialog	| nameX priceX caloryCount dialog |	nameX := '' asValue.	priceX := '' asValue.	caloryCount := '' asValue.	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Name' textLine: nameX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Price' textLine: priceX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Calory Count' textLine: caloryCount boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.	name value , price value , caloryCount value</body></methods><remove-selector><class-id>EROS</class-id> <selector>showSuggestionDialog</selector></remove-selector><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showLightDialog">showLightDialog	| nameX priceX calorieCount dialog |	nameX := '' asValue.	priceX := '' asValue.	calorieCount := '' asValue.	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Name' textLine: nameX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Price' textLine: priceX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Calorie Count' textLine: calorieCount boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.	name value , price value , calorieCount value</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name , dessert name , soda name.							self showLightDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer name , dessert name , soda name.							^self showLightDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"			(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer calories, dessert name , soda name.							^self showLightDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"			(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer value, dessert value , soda value.							^self showLightDialog]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"			(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer value printString, dessert value printString, soda value printString.							^self showLightDialog]]].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	mealPrice := 0.	mealCalories := 0.	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	mealPrice := 0.	mealCalories := 0.	price := 0.	calories := 0.	^self</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	mealPrice := 0.	mealCalories := 0.	"price := 0.	calories := 0."	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	mealPrice := 0.	mealCalories := 0.	price := 0.	"calories := 0."	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					"menuSelectionValue inspect."					ingredients list: menuSelectionValue ingredients]				ifFalse: 					[(value isKindOf: Magnitude)						ifTrue: [(self perform: method) value: value]						ifFalse: [(self perform: method) value: value].					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := 0 asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := 0 asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	mealPrice := 0.	mealCalories := 0.	"price := 0."	"calories := 0."	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	mealPrice := 0.	mealCalories := 0.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"		(mealCalories value notNil and: []) ifTrue: [	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer value printString, dessert value printString, soda value printString.							^self showLightDialog]]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"		(mealCalories value notNil and: [mealPrice value notNil]) ifTrue: [	(menu tree find: #Appetizers) childrenDo: 			[:appetizer |			(menu tree find: #Desserts) childrenDo: 					[:dessert |					(menu tree find: #Soda) childrenDo: 							[:soda |							Transcript								cr;								show: appetizer value printString, dessert value printString, soda value printString.							^self showLightDialog]]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript										cr;										show: appetizer value printString , dessert value printString													, soda value printString.									^self showLightDialog]]]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript										cr;										show: appetizer value printString , dessert value printString													, soda value printString.									^self showLightDialog]]]]		ifFalse: [Transcript cr, 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript										cr;										show: appetizer value printString , dessert value printString													, soda value printString.									self showLightDialog]]]]		ifFalse: [Transcript cr, 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showLightDialog">showLightDialog	| nameX priceX calorieCount dialog |	nameX := '' asValue.	priceX := '' asValue.	calorieCount := '' asValue.	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Name' textLine: nameX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Price' textLine: priceX boundary: 0.4.	dialog addGap.	dialog addMessage: 'Calorie Count' textLine: calorieCount boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript										cr;										show: appetizer value printString , dessert value printString													, soda value printString.									^self showLightDialog]]]]		ifFalse: [Transcript cr, 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									((mealCalories value &gt; appetizer value calories) + dessert value calories										+ soda value calories and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									((mealCalories value &gt; appetizer value calories) + dessert value calories										+ soda value calories and: [])										ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value) calories											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 851 426 1551 917 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>soda</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>soda</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript cr, mealCalories value.									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript cr, mealCalories.									(mealCalories										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript cr, mealCalories printString.									(mealCalories										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	child expanded: true.	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: true).	self redrawMenu.	menu inspect.	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := 0 asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredientInput">ingredientInput	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredientInput isNil		ifTrue:			[ingredientInput := String new asValue]		ifFalse:			[ingredientInput]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealPrice">mealPrice	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealPrice isNil		ifTrue:			[mealPrice := 0 asValue]		ifFalse:			[mealPrice]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="name">name	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^name isNil		ifTrue:			[name := String new asValue]		ifFalse:			[name]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := 0 asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="side">side	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^side isNil		ifTrue:			[side := String new asValue]		ifFalse:			[side]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealCalories">mealCalories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealCalories isNil		ifTrue:			[mealCalories := 0 asValue]		ifFalse:			[mealCalories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredients">ingredients	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredients isNil		ifTrue:			[ingredients := SelectionInList new]		ifFalse:			[ingredients]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1022 433 1722 924 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	child expanded: true.	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: true).	self redrawMenu.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript cr, mealCalories printString.									(mealCalories										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript show: mealCalories printString; cr.									(mealCalories										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									Transcript show: mealCalories value printString; cr.									(mealCalories										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									mealCalories inspect.									Transcript show: mealCalories printString; cr.									(mealCalories										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealCalories">mealCalories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealCalories isNil		ifTrue:			[mealCalories := 0 asValue]		ifFalse:			[mealCalories]</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealPrice">mealPrice	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealPrice isNil		ifTrue:			[mealPrice := 0 asValue]		ifFalse:			[mealPrice]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1022 433 1722 924 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealPrice">mealPrice	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealPrice isNil		ifTrue:			[mealPrice := 0 asValue]		ifFalse:			[mealPrice]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1022 433 1722 924 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 42 359 279 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 6143 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 31 411 165 441 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 187 411 321 441 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 369 447 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 25 377 170 403 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 181 377 326 403 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '#,##0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 26 356 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 186 356 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 278 454 412 484 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealCalories">mealCalories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealCalories isNil		ifTrue:			[mealCalories := 0]		ifFalse:			[mealCalories]</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealCalories">mealCalories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealCalories isNil		ifTrue:			[mealCalories := 0 asValue]		ifFalse:			[mealCalories]</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									mealCalories inspect.									Transcript show: mealCalories printString; cr.									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									mealCalories inspect.									Transcript										show: mealCalories printString;										cr.									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: []) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									mealCalories inspect.									Transcript										show: mealCalories printString;										cr.									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true]) ifTrue: [^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><class><name>EROSMeal</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>Course </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSMeal</class-id> <category>accessing</category><body package="CS474" selector="course">course	^Course</body></methods><methods><class-id>EROSMeal</class-id> <category>accessing</category><body package="CS474" selector="course:">course: anObject	Course := anObject</body></methods><methods><class-id>EROSMeal</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	Course := nil.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><methods><class-id>EROSMeal class</class-id> <category>instance creation</category><body package="CS474" selector="new">new	"Answer a newly created and initialized instance."	^super new initialize</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Course</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>Course</staticKey> <definitionChange>added</definitionChange></component_static_change><class><name>EROSMeal</name><environment>Smalltalk</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars>courses </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><methods><class-id>EROSMeal</class-id> <category>accessing</category><body package="CS474" selector="courses">courses	^courses</body></methods><remove-selector><class-id>EROSMeal</class-id> <selector>course:</selector></remove-selector><remove-selector><class-id>EROSMeal</class-id> <selector>course</selector></remove-selector><methods><class-id>EROSMeal</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	" *** Edit the following to properly initialize instance variables ***"	courses := List new.	" *** And replace this comment with additional initialization code *** "	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>anEROSMenuItem</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>anEROSMenuItem</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMeal</class-id> <category>accessing</category><body package="CS474" selector="addCourse:">addCourse: anEROSMenuItem	courses add: anEROSMenuItem</body></methods><methods><class-id>EROSMeal</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	courses := List new.	^self</body></methods><do-it>EROSMeal organization addCategory: #printing</do-it><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="printString">printString		courses do: [ :course | course printString ].</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>appetizer</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>appetizer</staticKey> <definitionChange>added</definitionChange></component_static_change><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>dessert</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>dessert</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| meal |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									mealCalories inspect.									Transcript										show: mealCalories printString;										cr.									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true])											ifTrue: 												[meal := EROSMeal new.												meal addCourse: appetizer.												meal addCourse: dessert.												meal addCourse: soda.												^self showLightDialog]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| meal |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									mealCalories inspect.									Transcript										show: mealCalories printString;										cr.									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true])											ifTrue: 												[meal := EROSMeal new.												meal addCourse: appetizer.												meal addCourse: dessert.												meal addCourse: soda.												^Transcript													show: meal printString;													cr]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| meal |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true])											ifTrue: 												[meal := EROSMeal new.												meal addCourse: appetizer.												meal addCourse: dessert.												meal addCourse: soda.												^Transcript													show: meal printString;													cr]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString		courses do: [ :course | course printString ].</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: [ :course | string, course printString ].	^ string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: [ :course | string := string, course printString ].	^ string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: [ :course | string := string, course name ].	^ string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: [ :course | string := string, course name ].	^ string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: [ :course | string := string, course name, (String with: Character cr) ].	^ string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: 			[:course |			string := string , course name , (String with: Character tab)						, course calories , (String with: Character tab)						, course price , (String with: Character cr)].	^string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: 			[:course |			string := string , course name , (String with: Character tab).			string := string , course calories , (String with: Character tab).			string := string , course price , (String with: Character cr)].	^string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: 			[:course |			string := string , course name , (String with: Character tab).			string := string , course calories , (String with: Character tab).			string := string , course price , (String with: Character cr)].	^string</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| meal |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true])											ifTrue: 												[meal := EROSMeal new.												meal addCourse: appetizer value.												meal addCourse: dessert value.												meal addCourse: soda value.												^Transcript													show: meal printString;													cr]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>tab</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>tab</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: 			[:course |			string := string , course name , (String with: Character tab).			course inspect.]."			string := string , course calories , (String with: Character tab).			string := string , course price , (String with: Character cr)]."	^string</body></methods><methods><class-id>EROSMeal</class-id> <category>printing</category><body package="CS474" selector="asString">asString	| string |	string := ''.	courses do: 			[:course |			string := string , course name , (String with: Character tab).			string := string , course calories printString, (String with: Character tab).			string := string , course price printString, (String with: Character cr)].	^string</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories  meal '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="price">price	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^price isNil		ifTrue:			[price := 0 asValue]		ifFalse:			[price]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredientInput">ingredientInput	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredientInput isNil		ifTrue:			[ingredientInput := String new asValue]		ifFalse:			[ingredientInput]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealPrice">mealPrice	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealPrice isNil		ifTrue:			[mealPrice := 0 asValue]		ifFalse:			[mealPrice]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="name">name	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^name isNil		ifTrue:			[name := String new asValue]		ifFalse:			[name]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="calories">calories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^calories isNil		ifTrue:			[calories := 0 asValue]		ifFalse:			[calories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="side">side	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^side isNil		ifTrue:			[side := String new asValue]		ifFalse:			[side]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="mealCalories">mealCalories	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^mealCalories isNil		ifTrue:			[mealCalories := 0 asValue]		ifFalse:			[mealCalories]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="description">description	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^description isNil		ifTrue:			[description := String new asValue]		ifFalse:			[description]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="ingredients">ingredients	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^ingredients isNil		ifTrue:			[ingredients := SelectionInList new]		ifFalse:			[ingredients]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="menu">menu	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^menu isNil		ifTrue:			[menu := IndentedTreeSelectionInList newEmptyInstance]		ifFalse:			[menu]</body></methods><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="meal">meal	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^meal isNil		ifTrue:			[meal := SelectionInList new]		ifFalse:			[meal]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1054 261 1754 752 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 40 359 277 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 5119 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 37 506 171 536 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 193 506 327 536 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 366 548 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 31 472 176 498 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 187 472 332 498 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '#,##0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 32 451 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 192 451 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 460 477 594 507 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 365 359 447 ) 					#name: #mealList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #meal 					#useModifierKeys: true 					#selectionType: #highlight ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="meal">meal	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^meal isNil		ifTrue:			[meal := SelectionInList new]		ifFalse:			[meal]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1054 261 1754 820 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 40 359 277 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 5119 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 37 506 171 536 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 193 506 327 536 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 366 548 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 31 472 176 498 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 187 472 332 498 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '#,##0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 32 451 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 192 451 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 474 489 612 507 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 365 359 447 ) 					#name: #mealList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #meal 					#useModifierKeys: true 					#selectionType: #highlight ) ) ) )</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="meal">meal	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^meal isNil		ifTrue:			[meal := SelectionInList new]		ifFalse:			[meal]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1054 261 1754 820 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 40 359 277 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 5119 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 37 506 171 536 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 193 506 327 536 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 366 548 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 31 472 176 498 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 187 472 332 498 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '#,##0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 32 451 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 192 451 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 474 489 612 507 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 365 359 447 ) 					#name: #mealList 					#flags: 45 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #meal 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) ) ) )</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^Transcript													show: meal printString;													cr]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [true])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												meal list: mealList.												^Transcript													show: meal printString;													cr]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1054 261 1754 820 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 40 359 277 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 5119 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 37 506 171 536 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 193 506 327 536 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 366 548 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 31 472 176 498 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 187 472 332 498 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '#,##0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 32 451 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 192 451 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 474 489 612 507 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 365 359 447 ) 					#name: #mealList 					#flags: 45 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #meal 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) ) ) )</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	string := string, name, ' ',  calories, ' ', price.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	string := string, name, ' ',  calories printString, ' ', price printString.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	string := string, name, ' ',  calories printString, ' $', price printString.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	string := string, name, ' (',  calories printString, ' $', price printString, ')'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := ''.	string := string, name, ' (',  calories printString, ' calories $', price printString, ')'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := name, ' (',  calories printString, ' calories $', price printString, ')'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := '$', price printString, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [mealPrice value										&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												meal list: mealList.												^Transcript													show: meal printString;													cr]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [mealPrice value										&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												meal list: mealList.]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [mealPrice value										&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]]		ifFalse: [Transcript cr , 'mealCalories or mealPrice was null'].	^self</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 19, 2014' '2:52:08 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 2:52:08 PM on March 19, 2014."</do-it><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := '$', PrintConverter print: price formattedBy: '####,###.##', ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string |	string := '$', PrintConverter print: price formattedBy: '####,###.##', ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>formattedPrice</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>formattedPrice</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '####,###.##'.	string := '$', price, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>formattedBy</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>formattedBy</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '####,###.##'.	formattedPrice inspect.	string := '$', price, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '####,###.##'.	formattedPrice inspect.	string := '$', price printString, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '####,###.##'.	formattedPrice asString inspect.	string := '$', price printString, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '####,###.##'.	formattedPrice asString inspect.	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '.##'.	formattedPrice asString inspect.	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.	formattedPrice asString inspect.	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>not</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>not</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.		formattedPrice := formattedPrice copyFrom: (formattedPrice findFirst: [:ch | ch isSeparator not])  to: (self findLast: [:ch | ch isSeparator not]).	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.		formattedPrice := formattedPrice copyFrom: (formattedPrice findFirst: [:ch | ch isSeparator not])  to: (formattedPrice findLast: [:ch | ch isSeparator not]).	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	| string formattedPrice |	"Format and print the string"	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.	formattedPrice := formattedPrice copyFrom: (formattedPrice findFirst: [:ch | ch isSeparator not])  to: (formattedPrice findLast: [:ch | ch isSeparator not]).	string := '$', formattedPrice, ' ', name, ' (',  calories printString, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	"Format and print the string"	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.	formattedPrice := formattedPrice				copyFrom: (formattedPrice findFirst: [:ch | ch isSeparator not])				to: (formattedPrice findLast: [:ch | ch isSeparator not]).	string := '$' , formattedPrice , ' ' , name , ' (' , calories printString				, ' calories)'.	^string</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showLightDialog">showLightDialog	| dialog |	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Error' textLine: 'No meals found fitting criteria!' boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showErrorDialog">showErrorDialog	| dialog |	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Error' textLine: 'No meals found fitting criteria!' boundary: 0.4.	dialog		addGap;		addOK: [true];		openDialog.</body></methods><remove-selector><class-id>EROS</class-id> <selector>showLightDialog</selector></remove-selector><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [mealPrice value										&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]]		ifFalse: [self showErrorDialog].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showErrorDialog">showErrorDialog	| dialog |	dialog := (SimpleDialog initializedFor: nil) setInitialGap.	dialog addMessage: 'Error' textLine: 'No meals found fitting criteria!' boundary: 0.4.	dialog		addGap;		addOK: [true];		open.</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>showErrorDialog</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>showErrorDialog</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showErrorDialog">showErrorDialog	Dialog warn: 'No meals found!'.</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showErrorDialog">showErrorDialog	Dialog warn: 'No meals found!'.</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: [mealPrice value										&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]]		ifFalse: [	Transcript show: 'Error'; cr.self showErrorDialog].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: 												[mealPrice value													&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]]		ifFalse: 			[Transcript				show: 'Error';				cr.			self showErrorDialog].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: 												[mealPrice value													&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]].	Transcript		show: 'Error';		cr.	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: 												[mealPrice value													&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Course') childrenDo: 					[ :main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (main value calories + dessert value calories + soda value calories)											and: 												[mealPrice value													&gt; (main value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: main value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[ :main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (main value calories + dessert value calories + soda value calories)											and: 												[mealPrice value													&gt; (main value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: main value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories + long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price + long value calories)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>long</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>long</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											Transcript show: 'I am here'; cr.											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[											Transcript show: 'I am here'; cr.mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[Transcript															show: 'I am here';															cr.														mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value calories)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]													ifFalse: 														[Transcript															show: 'I am here';															cr]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(menu tree find: #'Long Drinks') childrenDo: 											[:long |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]													ifFalse: 														[Transcript															show: 'I am here';															cr]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Soda) childrenDo: 							[:soda |							(menu tree find: #'Long Drinks') childrenDo: 									[:long |									(menu tree find: #Desserts) childrenDo: 											[:dessert |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]													ifFalse: 														[Transcript															show: 'I am here';															cr]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Soda) childrenDo: 							[:soda |							(menu tree find: #'Long Drinks') childrenDo: 									[:long |									(menu tree find: #Desserts) childrenDo: 											[:dessert |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"This stub method was generated by UIDefiner"	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Soda) childrenDo: 							[:soda |							(menu tree find: #'Long Drinks') childrenDo: 									[:long |									(menu tree find: #Desserts) childrenDo: 											[:dessert |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]].									(menu tree find: #Appetizers) childrenDo: 											[:appetizer |											(mealCalories value												&gt; (main value calories + appetizer value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + appetizer value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: appetizer value.														mealList add: main value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>MyCanvas</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>MyCanvas</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>MyCanvas removeFromSystem</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 19, 2014' '4:05:49 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 4:05:49 PM on March 19, 2014."</do-it><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addIngredient">addIngredient	"Adds an ingredient to a selected item"	ingredientInput value notEmpty		ifTrue: [ingredients list add: ingredientInput value].	self redrawIngredients.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="addMenuItem">addMenuItem	"Adds a new menu item to a menu."	| parent child |	(menu selection notNil and: [menu selection value notNil])		ifTrue: 			[(menu selection value isKindOf: Class)				ifTrue: 					[parent := menu selection.					child := menu selection value new]				ifFalse: 					[parent := menu selection parent.					child := parent value new].			parent addChild: ((AssociationTreeWithParent new parent: parent)						key: child name asSymbol						value: child)].	self redrawMenu.	menu selection: child.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>createNewList</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>createNewList</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="createNewList">createNewList	"Creates and initializes a new hierarchical list"	| tree child |	tree := AssociationTreeWithParent new key: 'Root' value: nil.	"Add Food Items"	child := (AssociationTreeWithParent new parent: self) key: #Food value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Appetizers				value: EROSAppetizerItem).	child addChild: ((AssociationTreeWithParent new parent: self)				key: #'Main Courses'				value: EROSMainItem).	child		addChild: ((AssociationTreeWithParent new parent: self) key: #Desserts				value: EROSDessertItem).	child expanded: true.	"Add Beverage Items"	tree addChild: child.	child := (AssociationTreeWithParent new parent: self) key: #Beverages				value: nil.	child		addChild: ((AssociationTreeWithParent new parent: self) key: #'Long Drinks'				value: EROSLongDrinkItem).	child addChild: ((AssociationTreeWithParent new parent: self) key: #Soda				value: EROSMenuItem).	tree addChild: child.	self menu tree: (tree expanded: true).	self redrawMenu.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>deleteItem</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>deleteItem</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"Deletes an item from a menu"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent value].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="deleteItem">deleteItem	"Deletes an item from a menu"	| parent |	(menu selection notNil and: [menu selection value isKindOf: EROSMenuItem])		ifTrue: 			[parent := menu selection parent.			parent removeChild: menu selection.			self redrawMenu.			menu selection: parent value].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="loadList">loadList	"Loads a list from a saved BOS"	| inBOS dialog filename tree |	dialog := OpenFileDialog new.	dialog		windowTitle: 'Open Menu';		acceptButtonLabel: 'Open';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[inBOS := BinaryObjectStorage						onOld: (Filename named: filename asString) readStream.			tree := inBOS next.			(tree isKindOf: AssociationTree) ifTrue: [menu tree: tree]].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="quit">quit	"Closes the window"	self closeRequest.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="removeIngredient">removeIngredient	"Removes an ingredient from a selected menu item"	ingredients selection notNil		ifTrue: 			[ingredients list remove: ingredients selection.			self redrawIngredients].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="saveList">saveList	"Saves a list as a BOS to disk"	| outBOS dialog filename |	dialog := SaveFileDialog new.	dialog		windowTitle: 'Save Menu';		acceptButtonLabel: 'Save';		defaultFilename: 'menu.st';		addFileFilter: 'SmallTalk file (*.st' pattern: '*.st';		addFilterForAllFiles.	filename := dialog select.	filename notNil		ifTrue: 			[outBOS := BinaryObjectStorage						onNew: (Filename named: filename asString) writeStream.			outBOS nextPut: menu tree.			outBOS close].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showDescription">showDescription	"Shows a description from a selected menu item"	menu selection value notNil		ifTrue: 			[(menu selection value isKindOf: EROSMenuItem)				ifTrue: 					[self set: #name.					self set: #calories.					self set: #price.					self set: #side.					self set: #description.					self set: #ingredients]				ifFalse: [self disableFields]]		ifFalse: [self disableFields].	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="showErrorDialog">showErrorDialog	"Shows an error dialog"	Dialog warn: 'No meals found!'</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestFull">suggestFull	"Suggests a full meal.  This is messy and inefficient."	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #'Main Courses') childrenDo: 					[:main |					(menu tree find: #Soda) childrenDo: 							[:soda |							(menu tree find: #'Long Drinks') childrenDo: 									[:long |									(menu tree find: #Desserts) childrenDo: 											[:dessert |											(mealCalories value												&gt; (main value calories + dessert value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + dessert value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: main value.														mealList add: dessert value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]].									(menu tree find: #Appetizers) childrenDo: 											[:appetizer |											(mealCalories value												&gt; (main value calories + appetizer value calories + soda value calories														+ long value calories)													and: 														[mealPrice value															&gt; (main value price + appetizer value price + soda value price																	+ long value price)])													ifTrue: 														[mealList := List new.														mealList add: appetizer value.														mealList add: main value.														mealList add: soda value.														mealList add: long value.														^meal list: mealList]]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="suggestLight">suggestLight	"Suggests a light meal. This method is messy and inefficient."	| mealList |	(mealCalories value notNil and: [mealPrice value notNil])		ifTrue: 			[(menu tree find: #Appetizers) childrenDo: 					[:appetizer |					(menu tree find: #Desserts) childrenDo: 							[:dessert |							(menu tree find: #Soda) childrenDo: 									[:soda |									(mealCalories value										&gt; (appetizer value calories + dessert value calories + soda value calories)											and: 												[mealPrice value													&gt; (appetizer value price + dessert value price + soda value price)])											ifTrue: 												[mealList := List new.												mealList add: appetizer value.												mealList add: dessert value.												mealList add: soda value.												^meal list: mealList]]]]].	self showErrorDialog.	^self</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"Updates a menu item."	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	"todo set up ingredients"	self redrawMenu.	menu selection: selection value.	^self</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="disableFields">disableFields	"Makes unused fields invisible"	| wrapper |	#(#name #price #calories #side #description #ingredients) do: 			[:method |			wrapper := self wrapperAt: (method , #Field) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible].			wrapper := self wrapperAt: (method , #Label) asSymbol.			wrapper notNil ifTrue: [wrapper beInvisible]].	self hideIngredientsInput.	^self</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>hideIngredientsInput</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>hideIngredientsInput</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="hideIngredientsInput">hideIngredientsInput	"Hides the ingredients inputs."	(self wrapperAt: #ingredientInputField) beInvisible.	(self wrapperAt: #addIngredient) beInvisible.	(self wrapperAt: #removeIngredient) beInvisible</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>redrawIngredients</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>redrawIngredients</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawIngredients">redrawIngredients	"Redraws the ingredients widget"	| widget |	widget := (self builder componentAt: #ingredientsField) widget.	widget invalidate</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawIngredients">redrawIngredients	"Redraws the ingredients widget"	(self builder componentAt: #ingredientsField) widget invalidate	</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="redrawMenu">redrawMenu	"Redraws the Hierarchical list.  Calls the rebuildIndentedList, which is private, but I could not find any other way to refresh it.  'menu invalidate' does not work."	menu rebuildIndentedList</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: method	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (method , #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (method , #Field) asSymbol.	(menuSelectionValue respondsTo: method)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: method.			"Ingredients is a list"			method = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					"menuSelectionValue inspect."					ingredients list: menuSelectionValue ingredients]				ifFalse: 					[(self perform: method) value: value.					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: field	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (field, #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (field , #Field) asSymbol.	(menuSelectionValue respondsTo: field)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: field.			"Ingredients is a list"			field = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					ingredients list: menuSelectionValue ingredients]				ifFalse: 					[(self perform: field) value: value.					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>field</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>field</staticKey> <definitionChange>added</definitionChange></component_static_change><methods><class-id>EROS</class-id> <category>private</category><body package="CS474" selector="set:">set: field	"Sets an input field to the correct value or hides it"	| wrapper label menuSelectionValue value |	menuSelectionValue := menu selection value.	"Make the label visible"	label := self wrapperAt: (field, #Label) asSymbol.	"Make the widget visible"	wrapper := self wrapperAt: (field , #Field) asSymbol.	(menuSelectionValue respondsTo: field)		ifTrue: 			[label notNil ifTrue: [label beVisible].			wrapper notNil ifTrue: [wrapper beVisible].			value := menuSelectionValue perform: field.			"Ingredients is a list"			field = #ingredients				ifTrue: 					[(self wrapperAt: #ingredientInputField) beVisible.					(self wrapperAt: #addIngredient) beVisible.					(self wrapperAt: #removeIngredient) beVisible.					ingredients list: menuSelectionValue ingredients]				ifFalse: 					[(self perform: field) value: value.					self hideIngredientsInput]]		ifFalse: 			[label notNil ifTrue: [label beInvisible].			wrapper notNil ifTrue: [wrapper beInvisible]]</body></methods><methods><class-id>EROS</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initializes the object"	super initialize.	self createNewList.	self menu selectionIndexHolder onChangeSend: #showDescription to: self.	^self</body></methods><comment><class-id>EROS</class-id><body>The class for the GUI for the EROS Menu SystemInstance Variables	calories	&lt;ValueHolder&gt;	value holder for calories	description	&lt;ValueHolder&gt;	value holder for description	ingredientInput	&lt;ValueModel&gt;	value holder for the ingredients input	ingredients	&lt;SelectionInList&gt;	list view for ingredients	meal	&lt;SelectionInList&gt;	list view for meal	mealCalories	&lt;ValueModel&gt; value holder for the input for calories	mealPrice	&lt;ValueModel&gt;	value holder for the input of price	menu	&lt;IndentedTreeSelectionInList&gt;	a hierarchical list that shows the menu	name	&lt;ValueHolder&gt;	a value holder for the name	price	&lt;ValueHolder&gt;	a value holder for the price	side	&lt;ValueHolder&gt;	a value holder for the side</body></comment><comment><class-id>EROSAppetizerItem</class-id><body>EROSAppetizerItem representing an appetizer.Instance Variables	ingredients	&lt;OrderedCollection&gt;	a list of ingredients</body></comment><methods><class-id>EROSAppetizerItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	ingredients := OrderedCollection new.	^self</body></methods><methods><class-id>EROSAppetizerItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	"Responds with the ingredients"	^ingredients</body></methods><methods><class-id>EROSAppetizerItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	"Sets the ingredients"	ingredients := anObject</body></methods><component_static_change><name>System-Name Spaces</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>EROSMeal</staticKey> <definitionChange>removed</definitionChange></component_static_change><component_static_change><name>(none)</name> <type>package</type><definitionName>Root.Smalltalk.Kernel.Undeclared</definitionName> <staticKey>EROSMeal</staticKey> <definitionChange>added</definitionChange></component_static_change><do-it>EROSMeal removeFromSystem</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 19, 2014' '4:29:00 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 4:29:00 PM on March 19, 2014."</do-it><methods><class-id>EROSDessertItem</class-id> <category>accessing</category><body package="CS474" selector="description">description	"Responds with the description"	^description</body></methods><methods><class-id>EROSDessertItem</class-id> <category>accessing</category><body package="CS474" selector="description:">description: anObject	"Sets the description"	description := anObject</body></methods><methods><class-id>EROSDessertItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	description := ''.	^self</body></methods><comment><class-id>EROSDessertItem</class-id><body>EROSDessertItem represents a dessert item.Instance Variables	description	&lt;String&gt;	the description</body></comment><comment><class-id>EROSLongDrinkItem</class-id><body>EROSLongDrinkItem represents a Long Drink item.Instance Variables	ingredients	&lt;OrderedCollection&gt;	the ingredients of the long drink</body></comment><comment><class-id>EROSMainItem</class-id><body>EROSMainItem an EROS main course. Instance Variables	ingredients	&lt;OrderedCollection&gt;	a list of ingredients	side	&lt;String&gt;	a side dish</body></comment><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients">ingredients	"Responds with ingredients"	^ingredients</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	"Sets ingredients"	ingredients := anObject</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="ingredients:">ingredients: anObject	"Sets ingredients"	ingredients := anObject</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="side">side	"Responds with side"	^side</body></methods><methods><class-id>EROSMainItem</class-id> <category>accessing</category><body package="CS474" selector="side:">side: anObject	"Sets the side"	side := anObject</body></methods><methods><class-id>EROSMainItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	ingredients := OrderedCollection new.	side := ''.	^self</body></methods><methods><class-id>EROSMenuItem</class-id> <category>initialize-release</category><body package="CS474" selector="initialize">initialize	"Initialize a newly created instance. This method must answer the receiver."	super initialize.	name := 'New Item'.	calories := 10000.	price := 1000.00.	^self</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	"Format and print the string"	| string formattedPrice |	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.	formattedPrice := formattedPrice				copyFrom: (formattedPrice findFirst: [:ch | ch isSeparator not])				to: (formattedPrice findLast: [:ch | ch isSeparator not]).	string := '$' , formattedPrice , ' ' , name , ' (' , calories printString				, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>printing</category><body package="CS474" selector="printString">printString	"Converts the item to a string"	| string formattedPrice |	"Format and print the string"	formattedPrice := PrintConverter print: price formattedBy: '###,###.##'.	formattedPrice := formattedPrice				copyFrom: (formattedPrice findFirst: [:ch | ch isSeparator not])				to: (formattedPrice findLast: [:ch | ch isSeparator not]).	string := '$' , formattedPrice , ' ' , name , ' (' , calories printString				, ' calories)'.	^string</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="calories">calories	"Responds with calories"	^calories</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="calories:">calories: anObject	"Sets calories"	calories := anObject</body></methods><comment><class-id>EROSMenuItem</class-id><body>EROSMenuItem a default EROS menu item.Instance Variables	calories	&lt;SmallInteger&gt;	description of calories	name	&lt;String&gt;	description of name	price	&lt;Float&gt;	description of price</body></comment><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="name">name	"Responds with the name"	^name</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="name:">name: anObject	"Sets the name"	name := anObject</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="price">price	"Responds with the price"	^price</body></methods><methods><class-id>EROSMenuItem</class-id> <category>accessing</category><body package="CS474" selector="price:">price: anObject	"Sets the price"		price := anObject asNumber</body></methods><methods><class-id>EROS</class-id> <category>actions</category><body package="CS474" selector="updateItem">updateItem	"Updates a menu item."	| selection this |	this := self.	selection := menu selection.	(selection notNil and: [selection value isKindOf: EROSMenuItem])		ifTrue: 			[#(#name #calories #price #side #description) do: 					[:x |					(selection value respondsTo: (x , ':') asSymbol)						ifTrue: 							[selection value perform: (x , ':') asSymbol with: (this perform: x) value]].			selection key: selection value name asSymbol].	self redrawMenu.	menu selection: selection value.	^self</body></methods><class><name>EROS</name><environment>Smalltalk</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>CS474</package></attributes></class><do-it>Smalltalk defineClass: #EROS	superclass: #{UI.ApplicationModel}	indexedType: #none	private: false	instanceVariableNames: 'menu ingredients price calories name side description ingredientInput mealPrice mealCalories meal  '	classInstanceVariableNames: ''	imports: ''	category: ''</do-it><methods><class-id>EROS</class-id> <category>aspects</category><body package="CS474" selector="meal">meal	"This method was generated by UIDefiner.  Any edits made here	may be lost whenever methods are automatically defined.  The	initialization provided below may have been preempted by an	initialize method."	^meal isNil		ifTrue:			[meal := SelectionInList new]		ifFalse:			[meal]</body></methods><methods><class-id>EROS class</class-id> <category>interface specs</category><body package="CS474" selector="windowSpec">windowSpec	"Tools.UIPainter new openOnClass: self andSelector: #windowSpec"	&lt;resource: #canvas&gt;	^#(#{UI.FullSpec} 		#window: 		#(#{UI.WindowSpec} 			#label: 'EROS Menu System' 			#min: #(#{Core.Point} 20 20 ) 			#max: #(#{Core.Point} 0 0 ) 			#bounds: #(#{Graphics.Rectangle} 1054 261 1754 820 ) 			#colors: 			#(#{UI.LookPreferences} 				#setForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 				#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 6553 6553 6553 ) 				#setBorderColor: #(#{Graphics.ColorValue} #black ) ) ) 		#component: 		#(#{UI.SpecCollection} 			#collection: #(				#(#{UI.HierarchicalViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 40 359 277 ) 					#name: #menuList 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 8191 8191 5119 ) ) 					#model: #menu 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 33 312 125 345 ) 					#name: #ActionButton1 					#model: #createNewList 					#tabable: false 					#label: 'New list' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 54 284 169 312 ) 					#name: #ActionButton2 					#model: #addMenuItem 					#tabable: false 					#label: 'Add Menu Item' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 198 284 313 312 ) 					#name: #ActionButton3 					#model: #deleteItem 					#tabable: false 					#label: 'Delete Menu Item' 					#defaultable: true ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 162 8 ) 					#name: #Label1 					#label: 'Menu' 					#style: #large ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 138 312 230 345 ) 					#name: #ActionButton4 					#model: #saveList 					#tabable: false 					#label: 'Save List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 243 312 335 345 ) 					#name: #ActionButton5 					#model: #loadList 					#tabable: false 					#label: 'Load List' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 37 506 171 536 ) 					#name: #ActionButton6 					#model: #suggestFull 					#tabable: false 					#label: 'Suggest Full Meal' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 193 506 327 536 ) 					#name: #ActionButton7 					#model: #suggestLight 					#tabable: false 					#label: 'Suggest Light Meal' 					#defaultable: true ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 31 369 346 ) 					#name: #GroupBox1 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 9 353 366 548 ) 					#name: #GroupBox3 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} 7700 7700 7700 ) 						#setBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) ) 				#(#{UI.LabelSpec} 					#properties: #(#{UI.PropertyListDictionary} #labelFromApplication false ) 					#layout: #(#{Core.Point} 473 4 ) 					#name: #itemDescriptionLabel 					#label: 'Item Description' 					#style: #large ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 415 45 ) 					#name: #nameLabel 					#flags: 16 					#label: 'Name' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 420 73 ) 					#name: #priceLabel 					#flags: 16 					#label: 'Price' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 404 103 ) 					#name: #caloriesLabel 					#flags: 16 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 399 133 ) 					#name: #sideLabel 					#flags: 16 					#label: 'Side Dish' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 383 237 ) 					#name: #ingredientsLabel 					#flags: 16 					#label: 'Ingredients' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 388 167 ) 					#name: #descriptionLabel 					#flags: 16 					#label: 'Description' ) 				#(#{UI.GroupBoxSpec} 					#layout: #(#{Graphics.Rectangle} 375 31 688 448 ) 					#name: #GroupBox5 ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 31 472 176 498 ) 					#name: #mealCaloriesField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealCalories 					#tabable: false 					#alignment: #right 					#type: #number ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 187 472 332 498 ) 					#name: #mealPriceField 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #mealPrice 					#tabable: false 					#alignment: #right 					#type: #number 					#formatString: '#,##0' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 32 451 ) 					#name: #Label2 					#label: 'Calories' ) 				#(#{UI.LabelSpec} 					#layout: #(#{Core.Point} 192 451 ) 					#name: #Label3 					#label: 'Price' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 36 679 63 ) 					#name: #nameField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #name 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #string ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 67 679 94 ) 					#name: #priceField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #price 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0.00' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 98 679 125 ) 					#name: #caloriesField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #calories 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#type: #number 					#formatString: '0' ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 452 129 679 156 ) 					#name: #sideField 					#flags: 24 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #side 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false ) 				#(#{UI.TextEditorSpec} 					#layout: #(#{Graphics.Rectangle} 452 166 679 228 ) 					#name: #descriptionField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #description 					#callbacksSpec: 					#(#{UI.UIEventCallbackSubSpec} 						#valueChangeSelector: #updateItem ) 					#tabable: false 					#tabRequiresControl: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 452 236 679 362 ) 					#name: #ingredientsField 					#flags: 29 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) ) 					#model: #ingredients 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) 				#(#{UI.InputFieldSpec} 					#layout: #(#{Graphics.Rectangle} 413 392 685 412 ) 					#name: #ingredientInputField 					#flags: 24 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} 7044 7044 7044 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #ingredientInput 					#tabable: false ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 435 415 529 445 ) 					#name: #addIngredient 					#flags: 24 					#model: #addIngredient 					#tabable: false 					#label: 'Add Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 553 413 671 444 ) 					#name: #removeIngredient 					#flags: 24 					#model: #removeIngredient 					#tabable: false 					#label: 'Remove Ingredient' 					#defaultable: true ) 				#(#{UI.ActionButtonSpec} 					#layout: #(#{Graphics.Rectangle} 474 489 612 507 ) 					#name: #ActionButton8 					#colors: 					#(#{UI.LookPreferences} 						#setBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} 5119 8191 8191 ) ) 					#model: #quit 					#tabable: false 					#label: 'Quit' 					#defaultable: true ) 				#(#{UI.SequenceViewSpec} 					#layout: #(#{Graphics.Rectangle} 19 365 359 447 ) 					#name: #mealList 					#flags: 45 					#isOpaque: true 					#colors: 					#(#{UI.LookPreferences} 						#setForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setBackgroundColor: #(#{Graphics.ColorValue} #white ) 						#setSelectionForegroundColor: #(#{Graphics.ColorValue} #black ) 						#setSelectionBackgroundColor: #(#{Graphics.ColorValue} #white ) ) 					#model: #meal 					#tabable: false 					#useModifierKeys: true 					#selectionType: #highlight ) ) ) )</body></methods><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 19, 2014' '7:56:46 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 7:56:46 PM on March 19, 2014."</do-it><do-it>'----SNAPSHOT----'</do-it><do-it>"#('/home/wcmonty/Projects/474/hw2/HW2.im' 'March 19, 2014' '7:56:58 PM')""An image file /home/wcmonty/Projects/474/hw2/HW2.im was created at 7:56:58 PM on March 19, 2014."</do-it>