                      | /* $begin code-yso */
                      | /* $begin code-ysa */
                      | # Execution begins at address 0 
  0x000:              | 		.pos 0 
  0x000: 30f400010000 | init:	irmovl Stack, %esp  	# Set up stack pointer  
  0x006: 30f500010000 | 		irmovl Stack, %ebp  	# Set up base pointer   
  0x00c: 802c000000   | 		call Main		# Execute main program
  0x011: 00           | 		halt			# Terminate program 
                      | 
                      | # Array of 4 elements
  0x014:              | 		.align 4 	
                      | # Sample linked list 
  0x014:              | .align 4 
  0x014:              | ele1:
  0x014: 0a000000     | 	.long 0x00a
  0x018: 1c000000     | 	.long ele2
  0x01c:              | ele2:
  0x01c: b0000000     | 	.long 0xb0
  0x020: 24000000     | 	.long ele3
  0x024:              | ele3:
  0x024: 000c0000     | 	.long 0xc00
  0x028: 00000000     | 	.long 0
                      | 
  0x02c: a05f         | Main:	pushl %ebp 
  0x02e: 2045         | 		rrmovl %esp,%ebp
  0x030: 30f004000000 | 		irmovl $4,%eax	
  0x036: a00f         | 		pushl %eax		# Push 4
  0x038: 30f214000000 | 		irmovl ele1, %edx
  0x03e: a02f         | 		pushl %edx      	# Push array
  0x040: 804a000000   | 		call sum_list		# Sum(array, 4)
  0x045: 2054         | 		rrmovl %ebp, %esp
  0x047: b05f         | 		popl %ebp
  0x049: 90           | 		ret 
                      | 
                      | /* $begin sum-list 0 */
                      | # int sum_list(list_ptr ls)
  0x04a:              | sum_list:
  0x04a: a05f         | 		pushl	%ebp
  0x04c: 2045         | 		rrmovl	%esp, %ebp
  0x04e: 501508000000 | 		mrmovl	8(%ebp), %ecx 	# move ls into %ecx
  0x054: 6300         | 		xorl	%eax, %eax 	# zero out %eax
  0x056: 30f300000000 | 		irmovl	0, %ebx		# 
  0x05c: 6031         | 		addl	%ebx, %ecx
  0x05e: 737e000000   | 		je	SUM_LIST_RETURN
  0x063:              | LOOP:	
  0x063: 503100000000 | 		mrmovl	(%ecx), %ebx
  0x069: 6030         | 		addl	%ebx, %eax
  0x06b: 501104000000 | 		mrmovl	4(%ecx), %ecx
  0x071: 30f300000000 | 		irmovl	0, %ebx
  0x077: 6031         | 		addl	%ebx, %ecx
  0x079: 7463000000   | 		jne	LOOP
  0x07e:              | SUM_LIST_RETURN:
  0x07e: b05f         | 		popl %ebp
  0x080: 90           | 		ret
                      | /* $end sum-list 0 */
                      | 
                      | # The stack starts here and grows to lower addresses
  0x100:              | 	.pos 0x100		
  0x100:              | Stack:	 
                      | /* $end code-ysa */
                      | /* $end code-yso */
