#Execution begins at address 0
         .pos 0
init:    irmovl Stack, %esp
         irmovl Stack, %ebp
         call Main
         halt

#Array of 4 elements
         .align 4
array:   .long 0xd
         .long 0xc0
         .long 0xb00
         .long 0xa000

Main:    pushl %ebp
         rrmovl %esp, %ebp
         irmovl $4, %eax
         pushl %eax
         irmovl array, %edx
         pushl %edx
         call Sum
         rrmovl %ebp, %esp
         popl %ebp
         ret

#int Sum(int *Start, int Count)
Sum:
	pushl %ebp		
	rrmovl %esp,%ebp	
	mrmovl 8(%ebp),%ecx	# ecx = Start
	mrmovl 12(%ebp),%edx	# edx = Count
	xorl %eax, %eax         # sum=0
	andl   %edx,%edx	# 
	je     End		# jump if edx == 0
Loop:
	mrmovl (%ecx),%esi      # get *Start
	addl %esi,%eax          # add to sum
	irmovl $4,%ebx          # 
	addl %ebx,%ecx          # Start++
	irmovl $-1,%ebx	        # 
	addl %ebx,%edx          # Count--
	jne    Loop             # Stop when 0
End:	rrmovl %ebp, %esp
	popl %ebp		# restore stack frame
	ret		

# The stack goes here
	.pos 0x100
Stack:	
